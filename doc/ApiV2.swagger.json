{
  "openapi": "3.0.1",
  "info": {
    "title": "ORSCF IdentityManagement-API",
    "description": "NOTE: This is not intended be a 'RESTful' api, as it is NOT located on the persistence layer and is therefore NOT focused on doing CRUD operations! This HTTP-based API uses a 'call-based' approach to known BL operations. IN-, OUT- and return-arguments are transmitted using request-/response- wrappers (see [UJMW](https://github.com/KornSW/UnifiedJsonMessageWrapper)), which are very lightweight and are a compromise for broad support and adaptability in REST-inspired technologies as well as soap-inspired technologies!",
    "contact": {
      "name": "Open Research Study Communication Format",
      "url": "https://orscf.org",
      "email": "info@orscf.org"
    },
    "version": "2.0.0"
  },
  "paths": {
    "/ims/v2/store/AdditionalSubjectParticipationIdentifier/GetOriginIdentity": {
      "post": {
        "tags": [
          "AdditionalSubjectParticipationIdentifierStore"
        ],
        "summary": "Returns an string, representing the \"Identity\" of the current origin. This can be used to discriminate multiple sourc...",
        "description": "Returns an string, representing the \"Identity\" of the current origin.\r\nThis can be used to discriminate multiple source repos.\r\n(usually it should be related to a SCOPE like {DbServer}+{DbName/Schema}+{EntityName})\r\nNOTE: This is an technical disciminator and it is not required, that it is an human-readable\r\n\"frieldly-name\". It can just be an Hash or Uid, so its NOT RECOMMENDED to use it as display label!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetOriginIdentityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetOriginIdentityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetOriginIdentityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetOriginIdentityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/AdditionalSubjectParticipationIdentifier/GetCapabilities": {
      "post": {
        "tags": [
          "AdditionalSubjectParticipationIdentifierStore"
        ],
        "summary": "Returns an property bag which holds information about the implemented/supported capabilities of this IRepository.",
        "description": "Returns an property bag which holds information about the implemented/supported capabilities of this IRepository.\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetCapabilitiesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetCapabilitiesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetCapabilitiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetCapabilitiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/AdditionalSubjectParticipationIdentifier/GetEntityRefs": {
      "post": {
        "tags": [
          "AdditionalSubjectParticipationIdentifierStore"
        ],
        "summary": "",
        "description": "'GetEntityRefs'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: ...\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntityRefsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntityRefsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntityRefsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntityRefsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/AdditionalSubjectParticipationIdentifier/GetEntityRefsBySearchExpression": {
      "post": {
        "tags": [
          "AdditionalSubjectParticipationIdentifierStore"
        ],
        "summary": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this reposit...",
        "description": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: ...\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntityRefsBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntityRefsBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntityRefsBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntityRefsBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/AdditionalSubjectParticipationIdentifier/GetEntityRefsByKey": {
      "post": {
        "tags": [
          "AdditionalSubjectParticipationIdentifierStore"
        ],
        "summary": "",
        "description": "'GetEntityRefsByKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToLoad**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntityRefsByKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntityRefsByKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntityRefsByKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntityRefsByKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/AdditionalSubjectParticipationIdentifier/GetEntities": {
      "post": {
        "tags": [
          "AdditionalSubjectParticipationIdentifierStore"
        ],
        "summary": "",
        "description": "'GetEntities'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: ...\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntitiesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntitiesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntitiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntitiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/AdditionalSubjectParticipationIdentifier/GetEntitiesBySearchExpression": {
      "post": {
        "tags": [
          "AdditionalSubjectParticipationIdentifierStore"
        ],
        "summary": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this reposit...",
        "description": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: ...\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntitiesBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntitiesBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntitiesBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntitiesBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/AdditionalSubjectParticipationIdentifier/GetEntitiesByKey": {
      "post": {
        "tags": [
          "AdditionalSubjectParticipationIdentifierStore"
        ],
        "summary": "",
        "description": "'GetEntitiesByKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToLoad**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntitiesByKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntitiesByKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntitiesByKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntitiesByKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/AdditionalSubjectParticipationIdentifier/GetEntityFields": {
      "post": {
        "tags": [
          "AdditionalSubjectParticipationIdentifierStore"
        ],
        "summary": "",
        "description": "'GetEntityFields'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: ...\r\n\n\nParam **includedFieldNames**: An array of field names to be loaded\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntityFieldsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntityFieldsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntityFieldsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntityFieldsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/AdditionalSubjectParticipationIdentifier/GetEntityFieldsBySearchExpression": {
      "post": {
        "tags": [
          "AdditionalSubjectParticipationIdentifierStore"
        ],
        "summary": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this reposit...",
        "description": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: ...\r\n\n\nParam **includedFieldNames**: An array of field names to be loaded\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntityFieldsBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntityFieldsBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntityFieldsBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntityFieldsBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/AdditionalSubjectParticipationIdentifier/GetEntityFieldsByKey": {
      "post": {
        "tags": [
          "AdditionalSubjectParticipationIdentifierStore"
        ],
        "summary": "",
        "description": "'GetEntityFieldsByKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToLoad**: ...\r\n\n\nParam **includedFieldNames**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntityFieldsByKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntityFieldsByKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntityFieldsByKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreGetEntityFieldsByKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/AdditionalSubjectParticipationIdentifier/CountAll": {
      "post": {
        "tags": [
          "AdditionalSubjectParticipationIdentifierStore"
        ],
        "summary": "",
        "description": "'CountAll'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreCountAllRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreCountAllResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreCountAllResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreCountAllResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/AdditionalSubjectParticipationIdentifier/Count": {
      "post": {
        "tags": [
          "AdditionalSubjectParticipationIdentifierStore"
        ],
        "summary": "",
        "description": "'Count'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreCountRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreCountResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreCountResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreCountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/AdditionalSubjectParticipationIdentifier/CountBySearchExpression": {
      "post": {
        "tags": [
          "AdditionalSubjectParticipationIdentifierStore"
        ],
        "summary": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this reposit...",
        "description": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreCountBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreCountBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreCountBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreCountBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/AdditionalSubjectParticipationIdentifier/ContainsKey": {
      "post": {
        "tags": [
          "AdditionalSubjectParticipationIdentifierStore"
        ],
        "summary": "",
        "description": "'ContainsKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **key**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreContainsKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreContainsKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreContainsKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreContainsKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/AdditionalSubjectParticipationIdentifier/AddOrUpdateEntityFields": {
      "post": {
        "tags": [
          "AdditionalSubjectParticipationIdentifierStore"
        ],
        "summary": "Creates an new Entity or Updates the given set of fields for an entity and returns all fields that ARE DIFFERENT from...",
        "description": "Creates an new Entity or Updates the given set of fields for an entity and\r\nreturns all fields that ARE DIFFERENT from the given values or null, if the entity wasn't found.\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **fields**: NOTE: The target entity to be updated will be addressed by the key values used from this param, so if the given dictionary contains key fields which are addressing an exisiting record, then it will be updated. (CASE): If the given dictionary contains NO key fields, then the result is depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability): If external keys are required, this method will skip crating a record and return null, otherwise it will create a new record (with an new key) and return it. (CASE): If the given dictionary contains key fields, which are addressing an NOT exisiting entity then the result is again depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability): If external keys are required, this method will crate a record (using the given key) and return it, otherwise it will skip create a new record (with an new key) and return it. (CASE): If the given dictionary contains key fields, which are addressing an NOT exisiting entity then it will add it and return it again. Depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability) it will either use the given key oder create a assign a new key that will be present within the returned fields). For that reason it is IMPORTANT, that the call needs to evaluate the returned key!\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreAddOrUpdateEntityFieldsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreAddOrUpdateEntityFieldsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreAddOrUpdateEntityFieldsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreAddOrUpdateEntityFieldsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/AdditionalSubjectParticipationIdentifier/AddOrUpdateEntity": {
      "post": {
        "tags": [
          "AdditionalSubjectParticipationIdentifierStore"
        ],
        "summary": "",
        "description": "'AddOrUpdateEntity'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **entity**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreAddOrUpdateEntityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreAddOrUpdateEntityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreAddOrUpdateEntityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreAddOrUpdateEntityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/AdditionalSubjectParticipationIdentifier/TryUpdateEntityFields": {
      "post": {
        "tags": [
          "AdditionalSubjectParticipationIdentifierStore"
        ],
        "summary": "Updates the given set of fields for an entity and returns all fields that ARE DIFFERENT from the given values or null...",
        "description": "Updates the given set of fields for an entity and\r\nreturns all fields that ARE DIFFERENT from the given values or null, if the entity wasn't found.\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **fields**: NOTE: The target entity to be updated will be addressed by the key values used from this param! If the given dictionary does not contain the key fiels, an exception will be thrown!\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreTryUpdateEntityFieldsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreTryUpdateEntityFieldsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreTryUpdateEntityFieldsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreTryUpdateEntityFieldsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/AdditionalSubjectParticipationIdentifier/TryUpdateEntity": {
      "post": {
        "tags": [
          "AdditionalSubjectParticipationIdentifierStore"
        ],
        "summary": "",
        "description": "'TryUpdateEntity'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **entity**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreTryUpdateEntityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreTryUpdateEntityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreTryUpdateEntityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreTryUpdateEntityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/AdditionalSubjectParticipationIdentifier/TryAddEntity": {
      "post": {
        "tags": [
          "AdditionalSubjectParticipationIdentifierStore"
        ],
        "summary": "",
        "description": "'TryAddEntity'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **entity**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreTryAddEntityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreTryAddEntityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreTryAddEntityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreTryAddEntityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/AdditionalSubjectParticipationIdentifier/MassupdateByKeys": {
      "post": {
        "tags": [
          "AdditionalSubjectParticipationIdentifierStore"
        ],
        "summary": "",
        "description": "'MassupdateByKeys'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToUpdate**: ...\r\n\n\nParam **fields**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreMassupdateByKeysRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreMassupdateByKeysResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreMassupdateByKeysResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreMassupdateByKeysResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/AdditionalSubjectParticipationIdentifier/Massupdate": {
      "post": {
        "tags": [
          "AdditionalSubjectParticipationIdentifierStore"
        ],
        "summary": "Updates a dedicated subset of fields for all addressed entites and returns an array containing the keys of affeced en...",
        "description": "Updates a dedicated subset of fields for all addressed entites and\r\nreturns an array containing the keys of affeced entities.\r\nNOTE: this method can only be used, if the 'SupportsMassupdate'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: A filter to adress that entities, which sould be updated.\r\n\n\nParam **fields**: A set of fields and value, that should be update. It MUST NOT contain fields which are part of the Key, otherwise an exception will be thrown!\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreMassupdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreMassupdateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreMassupdateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreMassupdateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/AdditionalSubjectParticipationIdentifier/MassupdateBySearchExpression": {
      "post": {
        "tags": [
          "AdditionalSubjectParticipationIdentifierStore"
        ],
        "summary": "Updates a dedicated subset of fields for all addressed entites and returns an array containing the keys of affeced en...",
        "description": "Updates a dedicated subset of fields for all addressed entites and\r\nreturns an array containing the keys of affeced entities.\r\nNOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability and the\r\n'SupportsMassupdate'-Capability are given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: A search expression to adress that entities, which sould be updated.\r\n\n\nParam **fields**: A set of fields and value, that should be update. It MUST NOT contain fields which are part of the Key, otherwise an exception will be thrown!\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreMassupdateBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreMassupdateBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreMassupdateBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreMassupdateBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/AdditionalSubjectParticipationIdentifier/TryDeleteEntities": {
      "post": {
        "tags": [
          "AdditionalSubjectParticipationIdentifierStore"
        ],
        "summary": "",
        "description": "'TryDeleteEntities'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToDelete**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreTryDeleteEntitiesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreTryDeleteEntitiesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreTryDeleteEntitiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreTryDeleteEntitiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/AdditionalSubjectParticipationIdentifier/TryUpdateKey": {
      "post": {
        "tags": [
          "AdditionalSubjectParticipationIdentifierStore"
        ],
        "summary": "",
        "description": "'TryUpdateKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **currentKey**: ...\r\n\n\nParam **newKey**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreTryUpdateKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreTryUpdateKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreTryUpdateKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierStoreTryUpdateKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/IAgeEvaluation/EvaluateAge": {
      "post": {
        "tags": [
          "AgeEvaluationService"
        ],
        "summary": "Calculates the age (only the integer Year) of several persons for a given date. This is supporting the very common us...",
        "description": "Calculates the age (only the integer Year) of several persons for a given date.\r\nThis is supporting the very common usecase to evaluate inclusion criteria for research studies where the date of birth is not present alongside of the medical data.\r\nIt allows for minimalist access disclosing the date of birth information (as happening when unblinding).\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **momentOfValuation**: ...\r\n\n\nParam **pseudonymesToEvaluate**: ...\r\n\n\nParam **pseudonymKind**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgeEvaluationServiceEvaluateAgeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **ages**: Returns an array with the same amount of fields as the given 'pseudonymesToEvaluate'-array. If it was not possible to evalute the age beacuse of not present data, then the corresponding array-field will contain a value of -1!\r\n",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgeEvaluationServiceEvaluateAgeResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgeEvaluationServiceEvaluateAgeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgeEvaluationServiceEvaluateAgeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/ImsApiInfo/GetApiVersion": {
      "post": {
        "tags": [
          "ImsApiInfoService"
        ],
        "summary": "returns the version of the ORSCF specification which is implemented by this API, (this can be used for backward compa...",
        "description": "returns the version of the ORSCF specification which is implemented by this API,\r\n(this can be used for backward compatibility within inhomogeneous infrastructures)\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImsApiInfoServiceGetApiVersionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImsApiInfoServiceGetApiVersionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImsApiInfoServiceGetApiVersionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImsApiInfoServiceGetApiVersionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/ImsApiInfo/GetCapabilities": {
      "post": {
        "tags": [
          "ImsApiInfoService"
        ],
        "summary": "returns a list of API-features (there are several 'services' for different use cases, described by ORSCF) supported b...",
        "description": "returns a list of API-features (there are several 'services' for different use cases, described by ORSCF)\r\nsupported by this implementation. The following values are possible:\r\n'ImsApiInfo',\r\n'Pseudonymization',\r\n'AgeEvaluation',\r\n'Unblinding',\r\n'UnblindingClearanceAwaiter'  (backend workflow for \"PASSIVE-APPROVAL\"),\r\n'UnblindingClearanceGranting' (backend workflow for \"ACTIVE-APPROVAL\")\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImsApiInfoServiceGetCapabilitiesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImsApiInfoServiceGetCapabilitiesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImsApiInfoServiceGetCapabilitiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImsApiInfoServiceGetCapabilitiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/ImsApiInfo/GetPermittedAuthScopes": {
      "post": {
        "tags": [
          "ImsApiInfoService"
        ],
        "summary": "returns a list of available capabilities (\"API:Pseudonymization\") and/or data-scopes (\"Study:9B2C3F48-2941-2F8F-4D35-...",
        "description": "returns a list of available capabilities (\"API:Pseudonymization\") and/or\r\ndata-scopes (\"Study:9B2C3F48-2941-2F8F-4D35-7D117D5C6F72\")\r\nwhich are permitted for the CURRENT ACCESSOR and gives information about its 'authState', which can be:\r\n0=auth needed /\r\n1=authenticated /\r\n-1=auth expired /\r\n-2=auth invalid/disabled\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImsApiInfoServiceGetPermittedAuthScopesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **authState**: ...\r\n",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImsApiInfoServiceGetPermittedAuthScopesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImsApiInfoServiceGetPermittedAuthScopesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImsApiInfoServiceGetPermittedAuthScopesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/ImsApiInfo/GetOAuthTokenRequestUrl": {
      "post": {
        "tags": [
          "ImsApiInfoService"
        ],
        "summary": "OPTIONAL: If the authentication on the current service is mapped using tokens and should provide information about th...",
        "description": "OPTIONAL: If the authentication on the current service is mapped\r\nusing tokens and should provide information about the source at this point,\r\nthe login URL to be called up via browser (OAuth <see href=\"https://openid.net/specs/openid-client-initiated-backchannel-authentication-core-1_0.html\">'CIBA-Flow'</see>) is returned here.\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImsApiInfoServiceGetOAuthTokenRequestUrlRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImsApiInfoServiceGetOAuthTokenRequestUrlResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImsApiInfoServiceGetOAuthTokenRequestUrlResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImsApiInfoServiceGetOAuthTokenRequestUrlResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/ImsApiInfo/GetExtendedFieldDescriptors": {
      "post": {
        "tags": [
          "ImsApiInfoService"
        ],
        "summary": "",
        "description": "'GetExtendedFieldDescriptors'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **languagePref**: Preferred language for the 'DisplayLabel' and 'InputDescription' fields of the returned descriptors. ONLY RELEVANT FOR THE UI!\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImsApiInfoServiceGetExtendedFieldDescriptorsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImsApiInfoServiceGetExtendedFieldDescriptorsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImsApiInfoServiceGetExtendedFieldDescriptorsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImsApiInfoServiceGetExtendedFieldDescriptorsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/Pseudonymization/GetOrCreatePseudonym": {
      "post": {
        "tags": [
          "PseudonymizationService"
        ],
        "summary": "",
        "description": "'GetOrCreatePseudonym'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **givenName**: the Firstname a person (named as in the HL7 standard)\r\n\n\nParam **familyName**: ...\r\n\n\nParam **birthDate**: date in format 'yyyy-MM-dd' (must NOT be a partial date for this usecase!)\r\n\n\nParam **pseudonymKindsToReturn**: ...\r\n\n\nParam **extendedFields**: additional values for each 'extendedField' that is mandatory within (and specific to) the current IMS-System. To retrieve the declarations for such fields call 'GetExtendedFieldDescriptors'\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PseudonymizationServiceGetOrCreatePseudonymRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **pseudonyms**: ...\r\n\n\nParam **wasCreatedNewly**: ...\r\n",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PseudonymizationServiceGetOrCreatePseudonymResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PseudonymizationServiceGetOrCreatePseudonymResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PseudonymizationServiceGetOrCreatePseudonymResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/Pseudonymization/GetExisitingPseudonym": {
      "post": {
        "tags": [
          "PseudonymizationService"
        ],
        "summary": "",
        "description": "'GetExisitingPseudonym'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **givenName**: ...\r\n\n\nParam **familyName**: ...\r\n\n\nParam **birthDate**: date in format 'yyyy-MM-dd' (must NOT be a partial date for this usecase!)\r\n\n\nParam **pseudonymKindsToReturn**: ...\r\n\n\nParam **extendedFields**: additional values for each 'extendedField' that is mandatory within (and specific to) the current IMS-System. To retrieve the declarations for such fields call 'GetExtendedFieldDescriptors'\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PseudonymizationServiceGetExisitingPseudonymRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **pseudonyms**: ...\r\n",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PseudonymizationServiceGetExisitingPseudonymResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PseudonymizationServiceGetExisitingPseudonymResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PseudonymizationServiceGetExisitingPseudonymResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyExecutionScope/GetOriginIdentity": {
      "post": {
        "tags": [
          "StudyExecutionScopeStore"
        ],
        "summary": "Returns an string, representing the \"Identity\" of the current origin. This can be used to discriminate multiple sourc...",
        "description": "Returns an string, representing the \"Identity\" of the current origin.\r\nThis can be used to discriminate multiple source repos.\r\n(usually it should be related to a SCOPE like {DbServer}+{DbName/Schema}+{EntityName})\r\nNOTE: This is an technical disciminator and it is not required, that it is an human-readable\r\n\"frieldly-name\". It can just be an Hash or Uid, so its NOT RECOMMENDED to use it as display label!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyExecutionScopeStoreGetOriginIdentityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetOriginIdentityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetOriginIdentityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetOriginIdentityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyExecutionScope/GetCapabilities": {
      "post": {
        "tags": [
          "StudyExecutionScopeStore"
        ],
        "summary": "Returns an property bag which holds information about the implemented/supported capabilities of this IRepository.",
        "description": "Returns an property bag which holds information about the implemented/supported capabilities of this IRepository.\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyExecutionScopeStoreGetCapabilitiesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetCapabilitiesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetCapabilitiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetCapabilitiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyExecutionScope/GetEntityRefs": {
      "post": {
        "tags": [
          "StudyExecutionScopeStore"
        ],
        "summary": "",
        "description": "'GetEntityRefs'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: ...\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntityRefsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntityRefsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntityRefsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntityRefsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyExecutionScope/GetEntityRefsBySearchExpression": {
      "post": {
        "tags": [
          "StudyExecutionScopeStore"
        ],
        "summary": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this reposit...",
        "description": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: ...\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntityRefsBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntityRefsBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntityRefsBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntityRefsBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyExecutionScope/GetEntityRefsByKey": {
      "post": {
        "tags": [
          "StudyExecutionScopeStore"
        ],
        "summary": "",
        "description": "'GetEntityRefsByKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToLoad**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntityRefsByKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntityRefsByKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntityRefsByKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntityRefsByKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyExecutionScope/GetEntities": {
      "post": {
        "tags": [
          "StudyExecutionScopeStore"
        ],
        "summary": "",
        "description": "'GetEntities'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: ...\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntitiesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntitiesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntitiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntitiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyExecutionScope/GetEntitiesBySearchExpression": {
      "post": {
        "tags": [
          "StudyExecutionScopeStore"
        ],
        "summary": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this reposit...",
        "description": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: ...\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntitiesBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntitiesBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntitiesBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntitiesBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyExecutionScope/GetEntitiesByKey": {
      "post": {
        "tags": [
          "StudyExecutionScopeStore"
        ],
        "summary": "",
        "description": "'GetEntitiesByKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToLoad**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntitiesByKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntitiesByKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntitiesByKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntitiesByKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyExecutionScope/GetEntityFields": {
      "post": {
        "tags": [
          "StudyExecutionScopeStore"
        ],
        "summary": "",
        "description": "'GetEntityFields'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: ...\r\n\n\nParam **includedFieldNames**: An array of field names to be loaded\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntityFieldsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntityFieldsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntityFieldsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntityFieldsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyExecutionScope/GetEntityFieldsBySearchExpression": {
      "post": {
        "tags": [
          "StudyExecutionScopeStore"
        ],
        "summary": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this reposit...",
        "description": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: ...\r\n\n\nParam **includedFieldNames**: An array of field names to be loaded\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntityFieldsBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntityFieldsBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntityFieldsBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntityFieldsBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyExecutionScope/GetEntityFieldsByKey": {
      "post": {
        "tags": [
          "StudyExecutionScopeStore"
        ],
        "summary": "",
        "description": "'GetEntityFieldsByKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToLoad**: ...\r\n\n\nParam **includedFieldNames**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntityFieldsByKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntityFieldsByKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntityFieldsByKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreGetEntityFieldsByKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyExecutionScope/CountAll": {
      "post": {
        "tags": [
          "StudyExecutionScopeStore"
        ],
        "summary": "",
        "description": "'CountAll'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyExecutionScopeStoreCountAllRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreCountAllResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreCountAllResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreCountAllResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyExecutionScope/Count": {
      "post": {
        "tags": [
          "StudyExecutionScopeStore"
        ],
        "summary": "",
        "description": "'Count'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyExecutionScopeStoreCountRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreCountResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreCountResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreCountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyExecutionScope/CountBySearchExpression": {
      "post": {
        "tags": [
          "StudyExecutionScopeStore"
        ],
        "summary": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this reposit...",
        "description": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyExecutionScopeStoreCountBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreCountBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreCountBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreCountBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyExecutionScope/ContainsKey": {
      "post": {
        "tags": [
          "StudyExecutionScopeStore"
        ],
        "summary": "",
        "description": "'ContainsKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **key**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyExecutionScopeStoreContainsKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreContainsKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreContainsKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreContainsKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyExecutionScope/AddOrUpdateEntityFields": {
      "post": {
        "tags": [
          "StudyExecutionScopeStore"
        ],
        "summary": "Creates an new Entity or Updates the given set of fields for an entity and returns all fields that ARE DIFFERENT from...",
        "description": "Creates an new Entity or Updates the given set of fields for an entity and\r\nreturns all fields that ARE DIFFERENT from the given values or null, if the entity wasn't found.\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **fields**: NOTE: The target entity to be updated will be addressed by the key values used from this param, so if the given dictionary contains key fields which are addressing an exisiting record, then it will be updated. (CASE): If the given dictionary contains NO key fields, then the result is depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability): If external keys are required, this method will skip crating a record and return null, otherwise it will create a new record (with an new key) and return it. (CASE): If the given dictionary contains key fields, which are addressing an NOT exisiting entity then the result is again depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability): If external keys are required, this method will crate a record (using the given key) and return it, otherwise it will skip create a new record (with an new key) and return it. (CASE): If the given dictionary contains key fields, which are addressing an NOT exisiting entity then it will add it and return it again. Depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability) it will either use the given key oder create a assign a new key that will be present within the returned fields). For that reason it is IMPORTANT, that the call needs to evaluate the returned key!\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyExecutionScopeStoreAddOrUpdateEntityFieldsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreAddOrUpdateEntityFieldsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreAddOrUpdateEntityFieldsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreAddOrUpdateEntityFieldsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyExecutionScope/AddOrUpdateEntity": {
      "post": {
        "tags": [
          "StudyExecutionScopeStore"
        ],
        "summary": "",
        "description": "'AddOrUpdateEntity'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **entity**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyExecutionScopeStoreAddOrUpdateEntityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreAddOrUpdateEntityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreAddOrUpdateEntityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreAddOrUpdateEntityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyExecutionScope/TryUpdateEntityFields": {
      "post": {
        "tags": [
          "StudyExecutionScopeStore"
        ],
        "summary": "Updates the given set of fields for an entity and returns all fields that ARE DIFFERENT from the given values or null...",
        "description": "Updates the given set of fields for an entity and\r\nreturns all fields that ARE DIFFERENT from the given values or null, if the entity wasn't found.\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **fields**: NOTE: The target entity to be updated will be addressed by the key values used from this param! If the given dictionary does not contain the key fiels, an exception will be thrown!\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyExecutionScopeStoreTryUpdateEntityFieldsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreTryUpdateEntityFieldsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreTryUpdateEntityFieldsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreTryUpdateEntityFieldsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyExecutionScope/TryUpdateEntity": {
      "post": {
        "tags": [
          "StudyExecutionScopeStore"
        ],
        "summary": "",
        "description": "'TryUpdateEntity'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **entity**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyExecutionScopeStoreTryUpdateEntityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreTryUpdateEntityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreTryUpdateEntityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreTryUpdateEntityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyExecutionScope/TryAddEntity": {
      "post": {
        "tags": [
          "StudyExecutionScopeStore"
        ],
        "summary": "",
        "description": "'TryAddEntity'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **entity**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyExecutionScopeStoreTryAddEntityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreTryAddEntityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreTryAddEntityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreTryAddEntityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyExecutionScope/MassupdateByKeys": {
      "post": {
        "tags": [
          "StudyExecutionScopeStore"
        ],
        "summary": "",
        "description": "'MassupdateByKeys'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToUpdate**: ...\r\n\n\nParam **fields**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyExecutionScopeStoreMassupdateByKeysRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreMassupdateByKeysResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreMassupdateByKeysResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreMassupdateByKeysResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyExecutionScope/Massupdate": {
      "post": {
        "tags": [
          "StudyExecutionScopeStore"
        ],
        "summary": "Updates a dedicated subset of fields for all addressed entites and returns an array containing the keys of affeced en...",
        "description": "Updates a dedicated subset of fields for all addressed entites and\r\nreturns an array containing the keys of affeced entities.\r\nNOTE: this method can only be used, if the 'SupportsMassupdate'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: A filter to adress that entities, which sould be updated.\r\n\n\nParam **fields**: A set of fields and value, that should be update. It MUST NOT contain fields which are part of the Key, otherwise an exception will be thrown!\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyExecutionScopeStoreMassupdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreMassupdateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreMassupdateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreMassupdateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyExecutionScope/MassupdateBySearchExpression": {
      "post": {
        "tags": [
          "StudyExecutionScopeStore"
        ],
        "summary": "Updates a dedicated subset of fields for all addressed entites and returns an array containing the keys of affeced en...",
        "description": "Updates a dedicated subset of fields for all addressed entites and\r\nreturns an array containing the keys of affeced entities.\r\nNOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability and the\r\n'SupportsMassupdate'-Capability are given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: A search expression to adress that entities, which sould be updated.\r\n\n\nParam **fields**: A set of fields and value, that should be update. It MUST NOT contain fields which are part of the Key, otherwise an exception will be thrown!\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyExecutionScopeStoreMassupdateBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreMassupdateBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreMassupdateBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreMassupdateBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyExecutionScope/TryDeleteEntities": {
      "post": {
        "tags": [
          "StudyExecutionScopeStore"
        ],
        "summary": "",
        "description": "'TryDeleteEntities'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToDelete**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyExecutionScopeStoreTryDeleteEntitiesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreTryDeleteEntitiesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreTryDeleteEntitiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreTryDeleteEntitiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyExecutionScope/TryUpdateKey": {
      "post": {
        "tags": [
          "StudyExecutionScopeStore"
        ],
        "summary": "",
        "description": "'TryUpdateKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **currentKey**: ...\r\n\n\nParam **newKey**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyExecutionScopeStoreTryUpdateKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreTryUpdateKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreTryUpdateKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyExecutionScopeStoreTryUpdateKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyScope/GetOriginIdentity": {
      "post": {
        "tags": [
          "StudyScopeStore"
        ],
        "summary": "Returns an string, representing the \"Identity\" of the current origin. This can be used to discriminate multiple sourc...",
        "description": "Returns an string, representing the \"Identity\" of the current origin.\r\nThis can be used to discriminate multiple source repos.\r\n(usually it should be related to a SCOPE like {DbServer}+{DbName/Schema}+{EntityName})\r\nNOTE: This is an technical disciminator and it is not required, that it is an human-readable\r\n\"frieldly-name\". It can just be an Hash or Uid, so its NOT RECOMMENDED to use it as display label!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyScopeStoreGetOriginIdentityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetOriginIdentityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetOriginIdentityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetOriginIdentityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyScope/GetCapabilities": {
      "post": {
        "tags": [
          "StudyScopeStore"
        ],
        "summary": "Returns an property bag which holds information about the implemented/supported capabilities of this IRepository.",
        "description": "Returns an property bag which holds information about the implemented/supported capabilities of this IRepository.\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyScopeStoreGetCapabilitiesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetCapabilitiesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetCapabilitiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetCapabilitiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyScope/GetEntityRefs": {
      "post": {
        "tags": [
          "StudyScopeStore"
        ],
        "summary": "",
        "description": "'GetEntityRefs'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: ...\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyScopeStoreGetEntityRefsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetEntityRefsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetEntityRefsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetEntityRefsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyScope/GetEntityRefsBySearchExpression": {
      "post": {
        "tags": [
          "StudyScopeStore"
        ],
        "summary": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this reposit...",
        "description": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: ...\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyScopeStoreGetEntityRefsBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetEntityRefsBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetEntityRefsBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetEntityRefsBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyScope/GetEntityRefsByKey": {
      "post": {
        "tags": [
          "StudyScopeStore"
        ],
        "summary": "",
        "description": "'GetEntityRefsByKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToLoad**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyScopeStoreGetEntityRefsByKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetEntityRefsByKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetEntityRefsByKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetEntityRefsByKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyScope/GetEntities": {
      "post": {
        "tags": [
          "StudyScopeStore"
        ],
        "summary": "",
        "description": "'GetEntities'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: ...\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyScopeStoreGetEntitiesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetEntitiesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetEntitiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetEntitiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyScope/GetEntitiesBySearchExpression": {
      "post": {
        "tags": [
          "StudyScopeStore"
        ],
        "summary": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this reposit...",
        "description": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: ...\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyScopeStoreGetEntitiesBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetEntitiesBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetEntitiesBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetEntitiesBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyScope/GetEntitiesByKey": {
      "post": {
        "tags": [
          "StudyScopeStore"
        ],
        "summary": "",
        "description": "'GetEntitiesByKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToLoad**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyScopeStoreGetEntitiesByKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetEntitiesByKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetEntitiesByKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetEntitiesByKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyScope/GetEntityFields": {
      "post": {
        "tags": [
          "StudyScopeStore"
        ],
        "summary": "",
        "description": "'GetEntityFields'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: ...\r\n\n\nParam **includedFieldNames**: An array of field names to be loaded\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyScopeStoreGetEntityFieldsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetEntityFieldsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetEntityFieldsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetEntityFieldsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyScope/GetEntityFieldsBySearchExpression": {
      "post": {
        "tags": [
          "StudyScopeStore"
        ],
        "summary": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this reposit...",
        "description": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: ...\r\n\n\nParam **includedFieldNames**: An array of field names to be loaded\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyScopeStoreGetEntityFieldsBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetEntityFieldsBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetEntityFieldsBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetEntityFieldsBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyScope/GetEntityFieldsByKey": {
      "post": {
        "tags": [
          "StudyScopeStore"
        ],
        "summary": "",
        "description": "'GetEntityFieldsByKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToLoad**: ...\r\n\n\nParam **includedFieldNames**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyScopeStoreGetEntityFieldsByKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetEntityFieldsByKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetEntityFieldsByKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreGetEntityFieldsByKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyScope/CountAll": {
      "post": {
        "tags": [
          "StudyScopeStore"
        ],
        "summary": "",
        "description": "'CountAll'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyScopeStoreCountAllRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreCountAllResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreCountAllResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreCountAllResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyScope/Count": {
      "post": {
        "tags": [
          "StudyScopeStore"
        ],
        "summary": "",
        "description": "'Count'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyScopeStoreCountRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreCountResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreCountResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreCountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyScope/CountBySearchExpression": {
      "post": {
        "tags": [
          "StudyScopeStore"
        ],
        "summary": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this reposit...",
        "description": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyScopeStoreCountBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreCountBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreCountBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreCountBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyScope/ContainsKey": {
      "post": {
        "tags": [
          "StudyScopeStore"
        ],
        "summary": "",
        "description": "'ContainsKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **key**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyScopeStoreContainsKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreContainsKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreContainsKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreContainsKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyScope/AddOrUpdateEntityFields": {
      "post": {
        "tags": [
          "StudyScopeStore"
        ],
        "summary": "Creates an new Entity or Updates the given set of fields for an entity and returns all fields that ARE DIFFERENT from...",
        "description": "Creates an new Entity or Updates the given set of fields for an entity and\r\nreturns all fields that ARE DIFFERENT from the given values or null, if the entity wasn't found.\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **fields**: NOTE: The target entity to be updated will be addressed by the key values used from this param, so if the given dictionary contains key fields which are addressing an exisiting record, then it will be updated. (CASE): If the given dictionary contains NO key fields, then the result is depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability): If external keys are required, this method will skip crating a record and return null, otherwise it will create a new record (with an new key) and return it. (CASE): If the given dictionary contains key fields, which are addressing an NOT exisiting entity then the result is again depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability): If external keys are required, this method will crate a record (using the given key) and return it, otherwise it will skip create a new record (with an new key) and return it. (CASE): If the given dictionary contains key fields, which are addressing an NOT exisiting entity then it will add it and return it again. Depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability) it will either use the given key oder create a assign a new key that will be present within the returned fields). For that reason it is IMPORTANT, that the call needs to evaluate the returned key!\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyScopeStoreAddOrUpdateEntityFieldsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreAddOrUpdateEntityFieldsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreAddOrUpdateEntityFieldsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreAddOrUpdateEntityFieldsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyScope/AddOrUpdateEntity": {
      "post": {
        "tags": [
          "StudyScopeStore"
        ],
        "summary": "",
        "description": "'AddOrUpdateEntity'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **entity**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyScopeStoreAddOrUpdateEntityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreAddOrUpdateEntityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreAddOrUpdateEntityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreAddOrUpdateEntityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyScope/TryUpdateEntityFields": {
      "post": {
        "tags": [
          "StudyScopeStore"
        ],
        "summary": "Updates the given set of fields for an entity and returns all fields that ARE DIFFERENT from the given values or null...",
        "description": "Updates the given set of fields for an entity and\r\nreturns all fields that ARE DIFFERENT from the given values or null, if the entity wasn't found.\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **fields**: NOTE: The target entity to be updated will be addressed by the key values used from this param! If the given dictionary does not contain the key fiels, an exception will be thrown!\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyScopeStoreTryUpdateEntityFieldsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreTryUpdateEntityFieldsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreTryUpdateEntityFieldsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreTryUpdateEntityFieldsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyScope/TryUpdateEntity": {
      "post": {
        "tags": [
          "StudyScopeStore"
        ],
        "summary": "",
        "description": "'TryUpdateEntity'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **entity**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyScopeStoreTryUpdateEntityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreTryUpdateEntityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreTryUpdateEntityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreTryUpdateEntityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyScope/TryAddEntity": {
      "post": {
        "tags": [
          "StudyScopeStore"
        ],
        "summary": "",
        "description": "'TryAddEntity'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **entity**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyScopeStoreTryAddEntityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreTryAddEntityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreTryAddEntityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreTryAddEntityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyScope/MassupdateByKeys": {
      "post": {
        "tags": [
          "StudyScopeStore"
        ],
        "summary": "",
        "description": "'MassupdateByKeys'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToUpdate**: ...\r\n\n\nParam **fields**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyScopeStoreMassupdateByKeysRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreMassupdateByKeysResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreMassupdateByKeysResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreMassupdateByKeysResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyScope/Massupdate": {
      "post": {
        "tags": [
          "StudyScopeStore"
        ],
        "summary": "Updates a dedicated subset of fields for all addressed entites and returns an array containing the keys of affeced en...",
        "description": "Updates a dedicated subset of fields for all addressed entites and\r\nreturns an array containing the keys of affeced entities.\r\nNOTE: this method can only be used, if the 'SupportsMassupdate'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: A filter to adress that entities, which sould be updated.\r\n\n\nParam **fields**: A set of fields and value, that should be update. It MUST NOT contain fields which are part of the Key, otherwise an exception will be thrown!\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyScopeStoreMassupdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreMassupdateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreMassupdateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreMassupdateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyScope/MassupdateBySearchExpression": {
      "post": {
        "tags": [
          "StudyScopeStore"
        ],
        "summary": "Updates a dedicated subset of fields for all addressed entites and returns an array containing the keys of affeced en...",
        "description": "Updates a dedicated subset of fields for all addressed entites and\r\nreturns an array containing the keys of affeced entities.\r\nNOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability and the\r\n'SupportsMassupdate'-Capability are given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: A search expression to adress that entities, which sould be updated.\r\n\n\nParam **fields**: A set of fields and value, that should be update. It MUST NOT contain fields which are part of the Key, otherwise an exception will be thrown!\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyScopeStoreMassupdateBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreMassupdateBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreMassupdateBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreMassupdateBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyScope/TryDeleteEntities": {
      "post": {
        "tags": [
          "StudyScopeStore"
        ],
        "summary": "",
        "description": "'TryDeleteEntities'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToDelete**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyScopeStoreTryDeleteEntitiesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreTryDeleteEntitiesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreTryDeleteEntitiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreTryDeleteEntitiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/StudyScope/TryUpdateKey": {
      "post": {
        "tags": [
          "StudyScopeStore"
        ],
        "summary": "",
        "description": "'TryUpdateKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **currentKey**: ...\r\n\n\nParam **newKey**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudyScopeStoreTryUpdateKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreTryUpdateKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreTryUpdateKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyScopeStoreTryUpdateKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectAddress/GetOriginIdentity": {
      "post": {
        "tags": [
          "SubjectAddressStore"
        ],
        "summary": "Returns an string, representing the \"Identity\" of the current origin. This can be used to discriminate multiple sourc...",
        "description": "Returns an string, representing the \"Identity\" of the current origin.\r\nThis can be used to discriminate multiple source repos.\r\n(usually it should be related to a SCOPE like {DbServer}+{DbName/Schema}+{EntityName})\r\nNOTE: This is an technical disciminator and it is not required, that it is an human-readable\r\n\"frieldly-name\". It can just be an Hash or Uid, so its NOT RECOMMENDED to use it as display label!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectAddressStoreGetOriginIdentityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetOriginIdentityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetOriginIdentityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetOriginIdentityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectAddress/GetCapabilities": {
      "post": {
        "tags": [
          "SubjectAddressStore"
        ],
        "summary": "Returns an property bag which holds information about the implemented/supported capabilities of this IRepository.",
        "description": "Returns an property bag which holds information about the implemented/supported capabilities of this IRepository.\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectAddressStoreGetCapabilitiesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetCapabilitiesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetCapabilitiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetCapabilitiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectAddress/GetEntityRefs": {
      "post": {
        "tags": [
          "SubjectAddressStore"
        ],
        "summary": "",
        "description": "'GetEntityRefs'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: ...\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectAddressStoreGetEntityRefsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetEntityRefsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetEntityRefsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetEntityRefsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectAddress/GetEntityRefsBySearchExpression": {
      "post": {
        "tags": [
          "SubjectAddressStore"
        ],
        "summary": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this reposit...",
        "description": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: ...\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectAddressStoreGetEntityRefsBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetEntityRefsBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetEntityRefsBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetEntityRefsBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectAddress/GetEntityRefsByKey": {
      "post": {
        "tags": [
          "SubjectAddressStore"
        ],
        "summary": "",
        "description": "'GetEntityRefsByKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToLoad**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectAddressStoreGetEntityRefsByKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetEntityRefsByKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetEntityRefsByKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetEntityRefsByKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectAddress/GetEntities": {
      "post": {
        "tags": [
          "SubjectAddressStore"
        ],
        "summary": "",
        "description": "'GetEntities'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: ...\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectAddressStoreGetEntitiesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetEntitiesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetEntitiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetEntitiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectAddress/GetEntitiesBySearchExpression": {
      "post": {
        "tags": [
          "SubjectAddressStore"
        ],
        "summary": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this reposit...",
        "description": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: ...\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectAddressStoreGetEntitiesBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetEntitiesBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetEntitiesBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetEntitiesBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectAddress/GetEntitiesByKey": {
      "post": {
        "tags": [
          "SubjectAddressStore"
        ],
        "summary": "",
        "description": "'GetEntitiesByKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToLoad**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectAddressStoreGetEntitiesByKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetEntitiesByKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetEntitiesByKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetEntitiesByKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectAddress/GetEntityFields": {
      "post": {
        "tags": [
          "SubjectAddressStore"
        ],
        "summary": "",
        "description": "'GetEntityFields'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: ...\r\n\n\nParam **includedFieldNames**: An array of field names to be loaded\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectAddressStoreGetEntityFieldsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetEntityFieldsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetEntityFieldsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetEntityFieldsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectAddress/GetEntityFieldsBySearchExpression": {
      "post": {
        "tags": [
          "SubjectAddressStore"
        ],
        "summary": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this reposit...",
        "description": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: ...\r\n\n\nParam **includedFieldNames**: An array of field names to be loaded\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectAddressStoreGetEntityFieldsBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetEntityFieldsBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetEntityFieldsBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetEntityFieldsBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectAddress/GetEntityFieldsByKey": {
      "post": {
        "tags": [
          "SubjectAddressStore"
        ],
        "summary": "",
        "description": "'GetEntityFieldsByKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToLoad**: ...\r\n\n\nParam **includedFieldNames**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectAddressStoreGetEntityFieldsByKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetEntityFieldsByKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetEntityFieldsByKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreGetEntityFieldsByKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectAddress/CountAll": {
      "post": {
        "tags": [
          "SubjectAddressStore"
        ],
        "summary": "",
        "description": "'CountAll'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectAddressStoreCountAllRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreCountAllResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreCountAllResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreCountAllResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectAddress/Count": {
      "post": {
        "tags": [
          "SubjectAddressStore"
        ],
        "summary": "",
        "description": "'Count'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectAddressStoreCountRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreCountResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreCountResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreCountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectAddress/CountBySearchExpression": {
      "post": {
        "tags": [
          "SubjectAddressStore"
        ],
        "summary": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this reposit...",
        "description": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectAddressStoreCountBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreCountBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreCountBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreCountBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectAddress/ContainsKey": {
      "post": {
        "tags": [
          "SubjectAddressStore"
        ],
        "summary": "",
        "description": "'ContainsKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **key**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectAddressStoreContainsKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreContainsKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreContainsKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreContainsKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectAddress/AddOrUpdateEntityFields": {
      "post": {
        "tags": [
          "SubjectAddressStore"
        ],
        "summary": "Creates an new Entity or Updates the given set of fields for an entity and returns all fields that ARE DIFFERENT from...",
        "description": "Creates an new Entity or Updates the given set of fields for an entity and\r\nreturns all fields that ARE DIFFERENT from the given values or null, if the entity wasn't found.\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **fields**: NOTE: The target entity to be updated will be addressed by the key values used from this param, so if the given dictionary contains key fields which are addressing an exisiting record, then it will be updated. (CASE): If the given dictionary contains NO key fields, then the result is depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability): If external keys are required, this method will skip crating a record and return null, otherwise it will create a new record (with an new key) and return it. (CASE): If the given dictionary contains key fields, which are addressing an NOT exisiting entity then the result is again depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability): If external keys are required, this method will crate a record (using the given key) and return it, otherwise it will skip create a new record (with an new key) and return it. (CASE): If the given dictionary contains key fields, which are addressing an NOT exisiting entity then it will add it and return it again. Depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability) it will either use the given key oder create a assign a new key that will be present within the returned fields). For that reason it is IMPORTANT, that the call needs to evaluate the returned key!\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectAddressStoreAddOrUpdateEntityFieldsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreAddOrUpdateEntityFieldsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreAddOrUpdateEntityFieldsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreAddOrUpdateEntityFieldsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectAddress/AddOrUpdateEntity": {
      "post": {
        "tags": [
          "SubjectAddressStore"
        ],
        "summary": "",
        "description": "'AddOrUpdateEntity'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **entity**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectAddressStoreAddOrUpdateEntityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreAddOrUpdateEntityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreAddOrUpdateEntityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreAddOrUpdateEntityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectAddress/TryUpdateEntityFields": {
      "post": {
        "tags": [
          "SubjectAddressStore"
        ],
        "summary": "Updates the given set of fields for an entity and returns all fields that ARE DIFFERENT from the given values or null...",
        "description": "Updates the given set of fields for an entity and\r\nreturns all fields that ARE DIFFERENT from the given values or null, if the entity wasn't found.\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **fields**: NOTE: The target entity to be updated will be addressed by the key values used from this param! If the given dictionary does not contain the key fiels, an exception will be thrown!\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectAddressStoreTryUpdateEntityFieldsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreTryUpdateEntityFieldsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreTryUpdateEntityFieldsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreTryUpdateEntityFieldsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectAddress/TryUpdateEntity": {
      "post": {
        "tags": [
          "SubjectAddressStore"
        ],
        "summary": "",
        "description": "'TryUpdateEntity'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **entity**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectAddressStoreTryUpdateEntityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreTryUpdateEntityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreTryUpdateEntityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreTryUpdateEntityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectAddress/TryAddEntity": {
      "post": {
        "tags": [
          "SubjectAddressStore"
        ],
        "summary": "",
        "description": "'TryAddEntity'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **entity**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectAddressStoreTryAddEntityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreTryAddEntityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreTryAddEntityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreTryAddEntityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectAddress/MassupdateByKeys": {
      "post": {
        "tags": [
          "SubjectAddressStore"
        ],
        "summary": "",
        "description": "'MassupdateByKeys'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToUpdate**: ...\r\n\n\nParam **fields**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectAddressStoreMassupdateByKeysRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreMassupdateByKeysResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreMassupdateByKeysResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreMassupdateByKeysResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectAddress/Massupdate": {
      "post": {
        "tags": [
          "SubjectAddressStore"
        ],
        "summary": "Updates a dedicated subset of fields for all addressed entites and returns an array containing the keys of affeced en...",
        "description": "Updates a dedicated subset of fields for all addressed entites and\r\nreturns an array containing the keys of affeced entities.\r\nNOTE: this method can only be used, if the 'SupportsMassupdate'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: A filter to adress that entities, which sould be updated.\r\n\n\nParam **fields**: A set of fields and value, that should be update. It MUST NOT contain fields which are part of the Key, otherwise an exception will be thrown!\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectAddressStoreMassupdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreMassupdateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreMassupdateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreMassupdateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectAddress/MassupdateBySearchExpression": {
      "post": {
        "tags": [
          "SubjectAddressStore"
        ],
        "summary": "Updates a dedicated subset of fields for all addressed entites and returns an array containing the keys of affeced en...",
        "description": "Updates a dedicated subset of fields for all addressed entites and\r\nreturns an array containing the keys of affeced entities.\r\nNOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability and the\r\n'SupportsMassupdate'-Capability are given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: A search expression to adress that entities, which sould be updated.\r\n\n\nParam **fields**: A set of fields and value, that should be update. It MUST NOT contain fields which are part of the Key, otherwise an exception will be thrown!\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectAddressStoreMassupdateBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreMassupdateBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreMassupdateBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreMassupdateBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectAddress/TryDeleteEntities": {
      "post": {
        "tags": [
          "SubjectAddressStore"
        ],
        "summary": "",
        "description": "'TryDeleteEntities'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToDelete**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectAddressStoreTryDeleteEntitiesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreTryDeleteEntitiesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreTryDeleteEntitiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreTryDeleteEntitiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectAddress/TryUpdateKey": {
      "post": {
        "tags": [
          "SubjectAddressStore"
        ],
        "summary": "",
        "description": "'TryUpdateKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **currentKey**: ...\r\n\n\nParam **newKey**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectAddressStoreTryUpdateKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreTryUpdateKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreTryUpdateKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAddressStoreTryUpdateKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectIdentity/GetOriginIdentity": {
      "post": {
        "tags": [
          "SubjectIdentityStore"
        ],
        "summary": "Returns an string, representing the \"Identity\" of the current origin. This can be used to discriminate multiple sourc...",
        "description": "Returns an string, representing the \"Identity\" of the current origin.\r\nThis can be used to discriminate multiple source repos.\r\n(usually it should be related to a SCOPE like {DbServer}+{DbName/Schema}+{EntityName})\r\nNOTE: This is an technical disciminator and it is not required, that it is an human-readable\r\n\"frieldly-name\". It can just be an Hash or Uid, so its NOT RECOMMENDED to use it as display label!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectIdentityStoreGetOriginIdentityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetOriginIdentityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetOriginIdentityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetOriginIdentityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectIdentity/GetCapabilities": {
      "post": {
        "tags": [
          "SubjectIdentityStore"
        ],
        "summary": "Returns an property bag which holds information about the implemented/supported capabilities of this IRepository.",
        "description": "Returns an property bag which holds information about the implemented/supported capabilities of this IRepository.\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectIdentityStoreGetCapabilitiesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetCapabilitiesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetCapabilitiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetCapabilitiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectIdentity/GetEntityRefs": {
      "post": {
        "tags": [
          "SubjectIdentityStore"
        ],
        "summary": "",
        "description": "'GetEntityRefs'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: ...\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectIdentityStoreGetEntityRefsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetEntityRefsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetEntityRefsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetEntityRefsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectIdentity/GetEntityRefsBySearchExpression": {
      "post": {
        "tags": [
          "SubjectIdentityStore"
        ],
        "summary": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this reposit...",
        "description": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: ...\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectIdentityStoreGetEntityRefsBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetEntityRefsBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetEntityRefsBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetEntityRefsBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectIdentity/GetEntityRefsByKey": {
      "post": {
        "tags": [
          "SubjectIdentityStore"
        ],
        "summary": "",
        "description": "'GetEntityRefsByKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToLoad**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectIdentityStoreGetEntityRefsByKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetEntityRefsByKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetEntityRefsByKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetEntityRefsByKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectIdentity/GetEntities": {
      "post": {
        "tags": [
          "SubjectIdentityStore"
        ],
        "summary": "",
        "description": "'GetEntities'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: ...\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectIdentityStoreGetEntitiesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetEntitiesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetEntitiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetEntitiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectIdentity/GetEntitiesBySearchExpression": {
      "post": {
        "tags": [
          "SubjectIdentityStore"
        ],
        "summary": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this reposit...",
        "description": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: ...\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectIdentityStoreGetEntitiesBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetEntitiesBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetEntitiesBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetEntitiesBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectIdentity/GetEntitiesByKey": {
      "post": {
        "tags": [
          "SubjectIdentityStore"
        ],
        "summary": "",
        "description": "'GetEntitiesByKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToLoad**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectIdentityStoreGetEntitiesByKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetEntitiesByKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetEntitiesByKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetEntitiesByKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectIdentity/GetEntityFields": {
      "post": {
        "tags": [
          "SubjectIdentityStore"
        ],
        "summary": "",
        "description": "'GetEntityFields'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: ...\r\n\n\nParam **includedFieldNames**: An array of field names to be loaded\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectIdentityStoreGetEntityFieldsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetEntityFieldsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetEntityFieldsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetEntityFieldsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectIdentity/GetEntityFieldsBySearchExpression": {
      "post": {
        "tags": [
          "SubjectIdentityStore"
        ],
        "summary": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this reposit...",
        "description": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: ...\r\n\n\nParam **includedFieldNames**: An array of field names to be loaded\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectIdentityStoreGetEntityFieldsBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetEntityFieldsBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetEntityFieldsBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetEntityFieldsBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectIdentity/GetEntityFieldsByKey": {
      "post": {
        "tags": [
          "SubjectIdentityStore"
        ],
        "summary": "",
        "description": "'GetEntityFieldsByKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToLoad**: ...\r\n\n\nParam **includedFieldNames**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectIdentityStoreGetEntityFieldsByKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetEntityFieldsByKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetEntityFieldsByKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreGetEntityFieldsByKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectIdentity/CountAll": {
      "post": {
        "tags": [
          "SubjectIdentityStore"
        ],
        "summary": "",
        "description": "'CountAll'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectIdentityStoreCountAllRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreCountAllResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreCountAllResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreCountAllResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectIdentity/Count": {
      "post": {
        "tags": [
          "SubjectIdentityStore"
        ],
        "summary": "",
        "description": "'Count'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectIdentityStoreCountRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreCountResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreCountResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreCountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectIdentity/CountBySearchExpression": {
      "post": {
        "tags": [
          "SubjectIdentityStore"
        ],
        "summary": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this reposit...",
        "description": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectIdentityStoreCountBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreCountBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreCountBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreCountBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectIdentity/ContainsKey": {
      "post": {
        "tags": [
          "SubjectIdentityStore"
        ],
        "summary": "",
        "description": "'ContainsKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **key**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectIdentityStoreContainsKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreContainsKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreContainsKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreContainsKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectIdentity/AddOrUpdateEntityFields": {
      "post": {
        "tags": [
          "SubjectIdentityStore"
        ],
        "summary": "Creates an new Entity or Updates the given set of fields for an entity and returns all fields that ARE DIFFERENT from...",
        "description": "Creates an new Entity or Updates the given set of fields for an entity and\r\nreturns all fields that ARE DIFFERENT from the given values or null, if the entity wasn't found.\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **fields**: NOTE: The target entity to be updated will be addressed by the key values used from this param, so if the given dictionary contains key fields which are addressing an exisiting record, then it will be updated. (CASE): If the given dictionary contains NO key fields, then the result is depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability): If external keys are required, this method will skip crating a record and return null, otherwise it will create a new record (with an new key) and return it. (CASE): If the given dictionary contains key fields, which are addressing an NOT exisiting entity then the result is again depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability): If external keys are required, this method will crate a record (using the given key) and return it, otherwise it will skip create a new record (with an new key) and return it. (CASE): If the given dictionary contains key fields, which are addressing an NOT exisiting entity then it will add it and return it again. Depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability) it will either use the given key oder create a assign a new key that will be present within the returned fields). For that reason it is IMPORTANT, that the call needs to evaluate the returned key!\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectIdentityStoreAddOrUpdateEntityFieldsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreAddOrUpdateEntityFieldsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreAddOrUpdateEntityFieldsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreAddOrUpdateEntityFieldsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectIdentity/AddOrUpdateEntity": {
      "post": {
        "tags": [
          "SubjectIdentityStore"
        ],
        "summary": "",
        "description": "'AddOrUpdateEntity'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **entity**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectIdentityStoreAddOrUpdateEntityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreAddOrUpdateEntityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreAddOrUpdateEntityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreAddOrUpdateEntityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectIdentity/TryUpdateEntityFields": {
      "post": {
        "tags": [
          "SubjectIdentityStore"
        ],
        "summary": "Updates the given set of fields for an entity and returns all fields that ARE DIFFERENT from the given values or null...",
        "description": "Updates the given set of fields for an entity and\r\nreturns all fields that ARE DIFFERENT from the given values or null, if the entity wasn't found.\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **fields**: NOTE: The target entity to be updated will be addressed by the key values used from this param! If the given dictionary does not contain the key fiels, an exception will be thrown!\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectIdentityStoreTryUpdateEntityFieldsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreTryUpdateEntityFieldsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreTryUpdateEntityFieldsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreTryUpdateEntityFieldsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectIdentity/TryUpdateEntity": {
      "post": {
        "tags": [
          "SubjectIdentityStore"
        ],
        "summary": "",
        "description": "'TryUpdateEntity'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **entity**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectIdentityStoreTryUpdateEntityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreTryUpdateEntityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreTryUpdateEntityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreTryUpdateEntityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectIdentity/TryAddEntity": {
      "post": {
        "tags": [
          "SubjectIdentityStore"
        ],
        "summary": "",
        "description": "'TryAddEntity'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **entity**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectIdentityStoreTryAddEntityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreTryAddEntityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreTryAddEntityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreTryAddEntityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectIdentity/MassupdateByKeys": {
      "post": {
        "tags": [
          "SubjectIdentityStore"
        ],
        "summary": "",
        "description": "'MassupdateByKeys'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToUpdate**: ...\r\n\n\nParam **fields**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectIdentityStoreMassupdateByKeysRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreMassupdateByKeysResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreMassupdateByKeysResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreMassupdateByKeysResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectIdentity/Massupdate": {
      "post": {
        "tags": [
          "SubjectIdentityStore"
        ],
        "summary": "Updates a dedicated subset of fields for all addressed entites and returns an array containing the keys of affeced en...",
        "description": "Updates a dedicated subset of fields for all addressed entites and\r\nreturns an array containing the keys of affeced entities.\r\nNOTE: this method can only be used, if the 'SupportsMassupdate'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: A filter to adress that entities, which sould be updated.\r\n\n\nParam **fields**: A set of fields and value, that should be update. It MUST NOT contain fields which are part of the Key, otherwise an exception will be thrown!\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectIdentityStoreMassupdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreMassupdateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreMassupdateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreMassupdateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectIdentity/MassupdateBySearchExpression": {
      "post": {
        "tags": [
          "SubjectIdentityStore"
        ],
        "summary": "Updates a dedicated subset of fields for all addressed entites and returns an array containing the keys of affeced en...",
        "description": "Updates a dedicated subset of fields for all addressed entites and\r\nreturns an array containing the keys of affeced entities.\r\nNOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability and the\r\n'SupportsMassupdate'-Capability are given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: A search expression to adress that entities, which sould be updated.\r\n\n\nParam **fields**: A set of fields and value, that should be update. It MUST NOT contain fields which are part of the Key, otherwise an exception will be thrown!\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectIdentityStoreMassupdateBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreMassupdateBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreMassupdateBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreMassupdateBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectIdentity/TryDeleteEntities": {
      "post": {
        "tags": [
          "SubjectIdentityStore"
        ],
        "summary": "",
        "description": "'TryDeleteEntities'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToDelete**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectIdentityStoreTryDeleteEntitiesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreTryDeleteEntitiesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreTryDeleteEntitiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreTryDeleteEntitiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectIdentity/TryUpdateKey": {
      "post": {
        "tags": [
          "SubjectIdentityStore"
        ],
        "summary": "",
        "description": "'TryUpdateKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **currentKey**: ...\r\n\n\nParam **newKey**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectIdentityStoreTryUpdateKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreTryUpdateKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreTryUpdateKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectIdentityStoreTryUpdateKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectParticipation/GetOriginIdentity": {
      "post": {
        "tags": [
          "SubjectParticipationStore"
        ],
        "summary": "Returns an string, representing the \"Identity\" of the current origin. This can be used to discriminate multiple sourc...",
        "description": "Returns an string, representing the \"Identity\" of the current origin.\r\nThis can be used to discriminate multiple source repos.\r\n(usually it should be related to a SCOPE like {DbServer}+{DbName/Schema}+{EntityName})\r\nNOTE: This is an technical disciminator and it is not required, that it is an human-readable\r\n\"frieldly-name\". It can just be an Hash or Uid, so its NOT RECOMMENDED to use it as display label!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectParticipationStoreGetOriginIdentityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetOriginIdentityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetOriginIdentityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetOriginIdentityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectParticipation/GetCapabilities": {
      "post": {
        "tags": [
          "SubjectParticipationStore"
        ],
        "summary": "Returns an property bag which holds information about the implemented/supported capabilities of this IRepository.",
        "description": "Returns an property bag which holds information about the implemented/supported capabilities of this IRepository.\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectParticipationStoreGetCapabilitiesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetCapabilitiesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetCapabilitiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetCapabilitiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectParticipation/GetEntityRefs": {
      "post": {
        "tags": [
          "SubjectParticipationStore"
        ],
        "summary": "",
        "description": "'GetEntityRefs'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: ...\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectParticipationStoreGetEntityRefsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetEntityRefsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetEntityRefsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetEntityRefsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectParticipation/GetEntityRefsBySearchExpression": {
      "post": {
        "tags": [
          "SubjectParticipationStore"
        ],
        "summary": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this reposit...",
        "description": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: ...\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectParticipationStoreGetEntityRefsBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetEntityRefsBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetEntityRefsBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetEntityRefsBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectParticipation/GetEntityRefsByKey": {
      "post": {
        "tags": [
          "SubjectParticipationStore"
        ],
        "summary": "",
        "description": "'GetEntityRefsByKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToLoad**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectParticipationStoreGetEntityRefsByKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetEntityRefsByKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetEntityRefsByKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetEntityRefsByKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectParticipation/GetEntities": {
      "post": {
        "tags": [
          "SubjectParticipationStore"
        ],
        "summary": "",
        "description": "'GetEntities'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: ...\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectParticipationStoreGetEntitiesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetEntitiesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetEntitiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetEntitiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectParticipation/GetEntitiesBySearchExpression": {
      "post": {
        "tags": [
          "SubjectParticipationStore"
        ],
        "summary": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this reposit...",
        "description": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: ...\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectParticipationStoreGetEntitiesBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetEntitiesBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetEntitiesBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetEntitiesBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectParticipation/GetEntitiesByKey": {
      "post": {
        "tags": [
          "SubjectParticipationStore"
        ],
        "summary": "",
        "description": "'GetEntitiesByKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToLoad**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectParticipationStoreGetEntitiesByKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetEntitiesByKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetEntitiesByKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetEntitiesByKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectParticipation/GetEntityFields": {
      "post": {
        "tags": [
          "SubjectParticipationStore"
        ],
        "summary": "",
        "description": "'GetEntityFields'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: ...\r\n\n\nParam **includedFieldNames**: An array of field names to be loaded\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectParticipationStoreGetEntityFieldsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetEntityFieldsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetEntityFieldsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetEntityFieldsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectParticipation/GetEntityFieldsBySearchExpression": {
      "post": {
        "tags": [
          "SubjectParticipationStore"
        ],
        "summary": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this reposit...",
        "description": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: ...\r\n\n\nParam **includedFieldNames**: An array of field names to be loaded\r\n\n\nParam **sortedBy**: An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']\r\n\n\nParam **limit**: ...\r\n\n\nParam **skip**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectParticipationStoreGetEntityFieldsBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetEntityFieldsBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetEntityFieldsBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetEntityFieldsBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectParticipation/GetEntityFieldsByKey": {
      "post": {
        "tags": [
          "SubjectParticipationStore"
        ],
        "summary": "",
        "description": "'GetEntityFieldsByKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToLoad**: ...\r\n\n\nParam **includedFieldNames**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectParticipationStoreGetEntityFieldsByKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetEntityFieldsByKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetEntityFieldsByKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreGetEntityFieldsByKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectParticipation/CountAll": {
      "post": {
        "tags": [
          "SubjectParticipationStore"
        ],
        "summary": "",
        "description": "'CountAll'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectParticipationStoreCountAllRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreCountAllResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreCountAllResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreCountAllResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectParticipation/Count": {
      "post": {
        "tags": [
          "SubjectParticipationStore"
        ],
        "summary": "",
        "description": "'Count'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectParticipationStoreCountRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreCountResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreCountResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreCountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectParticipation/CountBySearchExpression": {
      "post": {
        "tags": [
          "SubjectParticipationStore"
        ],
        "summary": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this reposit...",
        "description": "NOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectParticipationStoreCountBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreCountBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreCountBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreCountBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectParticipation/ContainsKey": {
      "post": {
        "tags": [
          "SubjectParticipationStore"
        ],
        "summary": "",
        "description": "'ContainsKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **key**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectParticipationStoreContainsKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreContainsKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreContainsKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreContainsKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectParticipation/AddOrUpdateEntityFields": {
      "post": {
        "tags": [
          "SubjectParticipationStore"
        ],
        "summary": "Creates an new Entity or Updates the given set of fields for an entity and returns all fields that ARE DIFFERENT from...",
        "description": "Creates an new Entity or Updates the given set of fields for an entity and\r\nreturns all fields that ARE DIFFERENT from the given values or null, if the entity wasn't found.\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **fields**: NOTE: The target entity to be updated will be addressed by the key values used from this param, so if the given dictionary contains key fields which are addressing an exisiting record, then it will be updated. (CASE): If the given dictionary contains NO key fields, then the result is depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability): If external keys are required, this method will skip crating a record and return null, otherwise it will create a new record (with an new key) and return it. (CASE): If the given dictionary contains key fields, which are addressing an NOT exisiting entity then the result is again depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability): If external keys are required, this method will crate a record (using the given key) and return it, otherwise it will skip create a new record (with an new key) and return it. (CASE): If the given dictionary contains key fields, which are addressing an NOT exisiting entity then it will add it and return it again. Depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability) it will either use the given key oder create a assign a new key that will be present within the returned fields). For that reason it is IMPORTANT, that the call needs to evaluate the returned key!\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectParticipationStoreAddOrUpdateEntityFieldsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreAddOrUpdateEntityFieldsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreAddOrUpdateEntityFieldsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreAddOrUpdateEntityFieldsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectParticipation/AddOrUpdateEntity": {
      "post": {
        "tags": [
          "SubjectParticipationStore"
        ],
        "summary": "",
        "description": "'AddOrUpdateEntity'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **entity**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectParticipationStoreAddOrUpdateEntityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreAddOrUpdateEntityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreAddOrUpdateEntityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreAddOrUpdateEntityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectParticipation/TryUpdateEntityFields": {
      "post": {
        "tags": [
          "SubjectParticipationStore"
        ],
        "summary": "Updates the given set of fields for an entity and returns all fields that ARE DIFFERENT from the given values or null...",
        "description": "Updates the given set of fields for an entity and\r\nreturns all fields that ARE DIFFERENT from the given values or null, if the entity wasn't found.\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **fields**: NOTE: The target entity to be updated will be addressed by the key values used from this param! If the given dictionary does not contain the key fiels, an exception will be thrown!\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectParticipationStoreTryUpdateEntityFieldsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreTryUpdateEntityFieldsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreTryUpdateEntityFieldsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreTryUpdateEntityFieldsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectParticipation/TryUpdateEntity": {
      "post": {
        "tags": [
          "SubjectParticipationStore"
        ],
        "summary": "",
        "description": "'TryUpdateEntity'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **entity**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectParticipationStoreTryUpdateEntityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreTryUpdateEntityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreTryUpdateEntityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreTryUpdateEntityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectParticipation/TryAddEntity": {
      "post": {
        "tags": [
          "SubjectParticipationStore"
        ],
        "summary": "",
        "description": "'TryAddEntity'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **entity**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectParticipationStoreTryAddEntityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreTryAddEntityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreTryAddEntityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreTryAddEntityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectParticipation/MassupdateByKeys": {
      "post": {
        "tags": [
          "SubjectParticipationStore"
        ],
        "summary": "",
        "description": "'MassupdateByKeys'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToUpdate**: ...\r\n\n\nParam **fields**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectParticipationStoreMassupdateByKeysRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreMassupdateByKeysResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreMassupdateByKeysResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreMassupdateByKeysResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectParticipation/Massupdate": {
      "post": {
        "tags": [
          "SubjectParticipationStore"
        ],
        "summary": "Updates a dedicated subset of fields for all addressed entites and returns an array containing the keys of affeced en...",
        "description": "Updates a dedicated subset of fields for all addressed entites and\r\nreturns an array containing the keys of affeced entities.\r\nNOTE: this method can only be used, if the 'SupportsMassupdate'-Capability is given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **filter**: A filter to adress that entities, which sould be updated.\r\n\n\nParam **fields**: A set of fields and value, that should be update. It MUST NOT contain fields which are part of the Key, otherwise an exception will be thrown!\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectParticipationStoreMassupdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreMassupdateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreMassupdateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreMassupdateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectParticipation/MassupdateBySearchExpression": {
      "post": {
        "tags": [
          "SubjectParticipationStore"
        ],
        "summary": "Updates a dedicated subset of fields for all addressed entites and returns an array containing the keys of affeced en...",
        "description": "Updates a dedicated subset of fields for all addressed entites and\r\nreturns an array containing the keys of affeced entities.\r\nNOTE: this method can only be used, if the 'SupportsStringBaseSearchExpressions'-Capability and the\r\n'SupportsMassupdate'-Capability are given for this repository!\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **searchExpression**: A search expression to adress that entities, which sould be updated.\r\n\n\nParam **fields**: A set of fields and value, that should be update. It MUST NOT contain fields which are part of the Key, otherwise an exception will be thrown!\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectParticipationStoreMassupdateBySearchExpressionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreMassupdateBySearchExpressionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreMassupdateBySearchExpressionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreMassupdateBySearchExpressionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectParticipation/TryDeleteEntities": {
      "post": {
        "tags": [
          "SubjectParticipationStore"
        ],
        "summary": "",
        "description": "'TryDeleteEntities'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **keysToDelete**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectParticipationStoreTryDeleteEntitiesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreTryDeleteEntitiesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreTryDeleteEntitiesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreTryDeleteEntitiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/store/SubjectParticipation/TryUpdateKey": {
      "post": {
        "tags": [
          "SubjectParticipationStore"
        ],
        "summary": "",
        "description": "'TryUpdateKey'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **currentKey**: ...\r\n\n\nParam **newKey**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectParticipationStoreTryUpdateKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreTryUpdateKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreTryUpdateKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectParticipationStoreTryUpdateKeyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/UnblindingClearanceAwaiter/GrantClearanceForUnblinding": {
      "post": {
        "tags": [
          "UnblindingClearanceAwaiterService"
        ],
        "summary": "",
        "description": "'GrantClearanceForUnblinding'\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **unblindingToken**: ...\r\n\n\nParam **pseudonymsToUnblind**: ...\r\n\n\nParam **grantedUnitl**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnblindingClearanceAwaiterServiceGrantClearanceForUnblindingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnblindingClearanceAwaiterServiceGrantClearanceForUnblindingResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblindingClearanceAwaiterServiceGrantClearanceForUnblindingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblindingClearanceAwaiterServiceGrantClearanceForUnblindingResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/UnblindingClearanceGranting/HasClearanceForUnblinding": {
      "post": {
        "tags": [
          "UnblindingClearanceGrantingService"
        ],
        "summary": "Returns: 1: if clearance granted / 0: if no realtime response is possible (delayed approval) -1: if a new unblindingT...",
        "description": "**Returns:**\n\r\n1: if clearance granted /\r\n0: if no realtime response is possible (delayed approval)\r\n-1: if a new unblindingToken is required (because the current has expired or has been repressed) /\r\n-2: if the access is denied for addressed scope of data\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **unblindingToken**: ...\r\n\n\nParam **pseudonymsToUnblind**: ...\r\n\n\nParam **accessRelatedDetails**: an optional container that can contain for example the ipadress or JWT token of the accessor or some MFA related information\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnblindingClearanceGrantingServiceHasClearanceForUnblindingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnblindingClearanceGrantingServiceHasClearanceForUnblindingResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblindingClearanceGrantingServiceHasClearanceForUnblindingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblindingClearanceGrantingServiceHasClearanceForUnblindingResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/Unblinding/RequestUnblindingToken": {
      "post": {
        "tags": [
          "UnblindingService"
        ],
        "summary": "Returns: 1: if clearance granted (token can be DIRECTLY used to call 'TryUnblind') / 0: if no realtime response is po...",
        "description": "**Returns:**\n\r\n1: if clearance granted (token can be DIRECTLY used to call 'TryUnblind') /\r\n0: if no realtime response is possible (delayed approval is outstanding)\r\n-1: if a new unblindingToken is required (because the current has expired or has been repressed) /\r\n-2: if the access is denied for addressed scope of data\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **pseudonymsToUnblind**: ...\r\n\n\nParam **pseudonymKind**: ...\r\n\n\nParam **requestReason**: ...\r\n\n\nParam **requestBy**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnblindingServiceRequestUnblindingTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **unblindingToken**: ...\r\n",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnblindingServiceRequestUnblindingTokenResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblindingServiceRequestUnblindingTokenResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblindingServiceRequestUnblindingTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ims/v2/Unblinding/TryUnblind": {
      "post": {
        "tags": [
          "UnblindingService"
        ],
        "summary": "Returns: 1: on SUCCESS (unblindedIdentities should contain data) / 0: if no realtime response is possible (delayed ap...",
        "description": "**Returns:**\n\r\n1: on SUCCESS (unblindedIdentities should contain data) /\r\n0: if no realtime response is possible (delayed approval is outstanding)\r\n-1: if a new unblindingToken is required (because the current has expired or has been repressed) /\r\n-2: if the access is denied for addressed scope of data\r\n",
        "requestBody": {
          "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)\n\nParam **unblindingToken**: ...\r\n\n\nParam **pseudonymsToUnblind**: ...\r\n\n\nParam **pseudonymKind**: ...\r\n\n\nParam **unblindedIdentities**: ...\r\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnblindingServiceTryUnblindRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An Unified Json Message Wrapper, which contains the following fields:\n\nParam **'_'**: used to flow additional ambient data (see UJMW standard)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnblindingServiceTryUnblindResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblindingServiceTryUnblindResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblindingServiceTryUnblindResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdditionalSubjectParticipationIdentifierStoreGetOriginIdentityRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreGetOriginIdentityResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "string",
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreGetCapabilitiesRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "RepositoryCapabilities": {
        "type": "object",
        "properties": {
          "canReadContent": {
            "type": "boolean"
          },
          "canUpdateContent": {
            "type": "boolean"
          },
          "canAddNewEntities": {
            "type": "boolean"
          },
          "canDeleteEntities": {
            "type": "boolean"
          },
          "supportsMassupdate": {
            "type": "boolean"
          },
          "supportsKeyUpdate": {
            "type": "boolean"
          },
          "supportsStringBasedSearchExpressions": {
            "type": "boolean"
          },
          "requiresExternalKeys": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AdditionalSubjectParticipationIdentifierStoreGetCapabilitiesResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "$ref": "#/components/schemas/RepositoryCapabilities"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "FieldPredicate": {
        "type": "object",
        "properties": {
          "fieldName": {
            "type": "string",
            "nullable": true
          },
          "operator": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExpressionTree": {
        "type": "object",
        "properties": {
          "matchAll": {
            "type": "boolean"
          },
          "negate": {
            "type": "boolean"
          },
          "predicates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldPredicate"
            },
            "nullable": true
          },
          "subTree": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressionTree"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdditionalSubjectParticipationIdentifierStoreGetEntityRefsRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierIdentity": {
        "type": "object",
        "additionalProperties": false,
        "description": "Composite Key, which represents the primary identity of a AdditionalSubjectParticipationIdentifier"
      },
      "AdditionalSubjectParticipationIdentifierIdentityEntityRef": {
        "type": "object",
        "properties": {
          "key": {
            "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierIdentity"
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdditionalSubjectParticipationIdentifierStoreGetEntityRefsResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierIdentityEntityRef"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreGetEntityRefsBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "nullable": true
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreGetEntityRefsBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierIdentityEntityRef"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreGetEntityRefsByKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToLoad": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierIdentity"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreGetEntityRefsByKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierIdentityEntityRef"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreGetEntitiesRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifier": {
        "required": [
          "identifierName",
          "identifierValue",
          "participantIdentifier",
          "researchStudyUid"
        ],
        "type": "object",
        "properties": {
          "participantIdentifier": {
            "maxLength": 50,
            "type": "string",
            "description": "*this field has a max length of 50"
          },
          "identifierName": {
            "maxLength": 30,
            "type": "string",
            "description": "*this field has a max length of 30"
          },
          "identifierValue": {
            "type": "string"
          },
          "researchStudyUid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "AdditionalSubjectParticipationIdentifierStoreGetEntitiesResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifier"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreGetEntitiesBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "nullable": true
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreGetEntitiesBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifier"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreGetEntitiesByKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToLoad": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierIdentity"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreGetEntitiesByKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifier"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreGetEntityFieldsRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          },
          "includedFieldNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be loaded",
            "nullable": true
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreGetEntityFieldsResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": { }
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreGetEntityFieldsBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "nullable": true
          },
          "includedFieldNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be loaded",
            "nullable": true
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreGetEntityFieldsBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": { }
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreGetEntityFieldsByKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToLoad": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierIdentity"
            },
            "nullable": true
          },
          "includedFieldNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreGetEntityFieldsByKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": { }
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreCountAllRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreCountAllResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "integer",
            "format": "int32"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreCountRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreCountResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "integer",
            "format": "int32"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreCountBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreCountBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "integer",
            "format": "int32"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreContainsKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "key": {
            "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierIdentity"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreContainsKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "boolean"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreAddOrUpdateEntityFieldsRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "description": "NOTE: The target entity to be updated will be addressed by the key values used from this param, so if the given dictionary contains key fields which are addressing an exisiting record, then it will be updated. (CASE): If the given dictionary contains NO key fields, then the result is depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability): If external keys are required, this method will skip crating a record and return null, otherwise it will create a new record (with an new key) and return it. (CASE): If the given dictionary contains key fields, which are addressing an NOT exisiting entity then the result is again depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability): If external keys are required, this method will crate a record (using the given key) and return it, otherwise it will skip create a new record (with an new key) and return it. (CASE): If the given dictionary contains key fields, which are addressing an NOT exisiting entity then it will add it and return it again. Depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability) it will either use the given key oder create a assign a new key that will be present within the returned fields). For that reason it is IMPORTANT, that the call needs to evaluate the returned key!",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreAddOrUpdateEntityFieldsResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreAddOrUpdateEntityRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "entity": {
            "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifier"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreAddOrUpdateEntityResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifier"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreTryUpdateEntityFieldsRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "description": "NOTE: The target entity to be updated will be addressed by the key values used from this param! If the given dictionary does not contain the key fiels, an exception will be thrown!",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreTryUpdateEntityFieldsResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreTryUpdateEntityRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "entity": {
            "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifier"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreTryUpdateEntityResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifier"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreTryAddEntityRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "entity": {
            "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifier"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreTryAddEntityResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierIdentity"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreMassupdateByKeysRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToUpdate": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierIdentity"
            },
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreMassupdateByKeysResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierIdentity"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreMassupdateRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "description": "A set of fields and value, that should be update. It MUST NOT contain fields which are part of the Key, otherwise an exception will be thrown!",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreMassupdateResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierIdentity"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreMassupdateBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "description": "A search expression to adress that entities, which sould be updated.",
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "description": "A set of fields and value, that should be update. It MUST NOT contain fields which are part of the Key, otherwise an exception will be thrown!",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreMassupdateBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierIdentity"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreTryDeleteEntitiesRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToDelete": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierIdentity"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreTryDeleteEntitiesResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierIdentity"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreTryUpdateKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "currentKey": {
            "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierIdentity"
          },
          "newKey": {
            "$ref": "#/components/schemas/AdditionalSubjectParticipationIdentifierIdentity"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AdditionalSubjectParticipationIdentifierStoreTryUpdateKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "boolean"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AgeEvaluationServiceEvaluateAgeRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "momentOfValuation": {
            "type": "string",
            "format": "date-time"
          },
          "pseudonymesToEvaluate": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "pseudonymKind": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "AgeEvaluationServiceEvaluateAgeResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "ages": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Returns an array with the same amount of fields as the given 'pseudonymesToEvaluate'-array. If it was not possible to evalute the age beacuse of not present data, then the corresponding array-field will contain a value of -1!",
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "ImsApiInfoServiceGetApiVersionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "ImsApiInfoServiceGetApiVersionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "string",
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "ImsApiInfoServiceGetCapabilitiesRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "ImsApiInfoServiceGetCapabilitiesResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "ImsApiInfoServiceGetPermittedAuthScopesRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "ImsApiInfoServiceGetPermittedAuthScopesResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "authState": {
            "type": "integer",
            "format": "int32"
          },
          "return": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "ImsApiInfoServiceGetOAuthTokenRequestUrlRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "ImsApiInfoServiceGetOAuthTokenRequestUrlResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "string",
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "ImsApiInfoServiceGetExtendedFieldDescriptorsRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "languagePref": {
            "type": "string",
            "description": "Preferred language for the 'DisplayLabel' and 'InputDescription' fields of the returned descriptors. ONLY RELEVANT FOR THE UI!",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "ExtendedFieldDescriptor": {
        "required": [
          "displayLabel",
          "isRequired",
          "technicalName"
        ],
        "type": "object",
        "properties": {
          "technicalName": {
            "type": "string"
          },
          "isRequired": {
            "type": "boolean"
          },
          "displayLabel": {
            "type": "string"
          },
          "inputDescription": {
            "type": "string",
            "nullable": true
          },
          "regularExpression": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImsApiInfoServiceGetExtendedFieldDescriptorsResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedFieldDescriptor"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "PseudonymizationServiceGetOrCreatePseudonymRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "givenName": {
            "type": "string",
            "description": "the Firstname a person (named as in the HL7 standard)",
            "nullable": true
          },
          "familyName": {
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "description": "date in format 'yyyy-MM-dd' (must NOT be a partial date for this usecase!)",
            "nullable": true
          },
          "pseudonymKindsToReturn": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "extendedFields": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "additional values for each 'extendedField' that is mandatory within (and specific to) the current IMS-System. To retrieve the declarations for such fields call 'GetExtendedFieldDescriptors'",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "Pseudonym": {
        "required": [
          "identifier",
          "kind"
        ],
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "description": "in this shloud be something like 'SubjectIdentifer'\r\nor \"SubjectIDentifier_FOO\" for a study named \"FOO\""
          },
          "identifier": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PseudonymizationServiceGetOrCreatePseudonymResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "pseudonyms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Pseudonym"
            },
            "nullable": true
          },
          "wasCreatedNewly": {
            "type": "boolean"
          },
          "return": {
            "type": "boolean"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "PseudonymizationServiceGetExisitingPseudonymRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "givenName": {
            "type": "string",
            "nullable": true
          },
          "familyName": {
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "description": "date in format 'yyyy-MM-dd' (must NOT be a partial date for this usecase!)",
            "nullable": true
          },
          "pseudonymKindsToReturn": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "extendedFields": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "additional values for each 'extendedField' that is mandatory within (and specific to) the current IMS-System. To retrieve the declarations for such fields call 'GetExtendedFieldDescriptors'",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "PseudonymizationServiceGetExisitingPseudonymResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "pseudonyms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Pseudonym"
            },
            "nullable": true
          },
          "return": {
            "type": "boolean"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreGetOriginIdentityRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreGetOriginIdentityResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "string",
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreGetCapabilitiesRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreGetCapabilitiesResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "$ref": "#/components/schemas/RepositoryCapabilities"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreGetEntityRefsRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "GuidEntityRef": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "format": "uuid"
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StudyExecutionScopeStoreGetEntityRefsResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuidEntityRef"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreGetEntityRefsBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "nullable": true
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreGetEntityRefsBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuidEntityRef"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreGetEntityRefsByKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToLoad": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreGetEntityRefsByKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuidEntityRef"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreGetEntitiesRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScope": {
        "required": [
          "researchStudyUid",
          "siteUid",
          "studyExecutionIdentifier"
        ],
        "type": "object",
        "properties": {
          "studyExecutionIdentifier": {
            "type": "string",
            "description": "a global unique id of a concrete study execution (dedicated to a concrete institute) which is usually originated at the primary CRF or study management system ('SMS')",
            "format": "uuid"
          },
          "siteUid": {
            "type": "string",
            "description": "the institute which is executing the study (this should be an invariant technical representation of the company name or a guid)",
            "format": "uuid"
          },
          "researchStudyUid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "StudyExecutionScopeStoreGetEntitiesResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StudyExecutionScope"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreGetEntitiesBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "nullable": true
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreGetEntitiesBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StudyExecutionScope"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreGetEntitiesByKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToLoad": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreGetEntitiesByKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StudyExecutionScope"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreGetEntityFieldsRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          },
          "includedFieldNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be loaded",
            "nullable": true
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreGetEntityFieldsResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": { }
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreGetEntityFieldsBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "nullable": true
          },
          "includedFieldNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be loaded",
            "nullable": true
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreGetEntityFieldsBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": { }
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreGetEntityFieldsByKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToLoad": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "includedFieldNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreGetEntityFieldsByKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": { }
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreCountAllRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreCountAllResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "integer",
            "format": "int32"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreCountRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreCountResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "integer",
            "format": "int32"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreCountBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreCountBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "integer",
            "format": "int32"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreContainsKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "key": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreContainsKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "boolean"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreAddOrUpdateEntityFieldsRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "description": "NOTE: The target entity to be updated will be addressed by the key values used from this param, so if the given dictionary contains key fields which are addressing an exisiting record, then it will be updated. (CASE): If the given dictionary contains NO key fields, then the result is depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability): If external keys are required, this method will skip crating a record and return null, otherwise it will create a new record (with an new key) and return it. (CASE): If the given dictionary contains key fields, which are addressing an NOT exisiting entity then the result is again depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability): If external keys are required, this method will crate a record (using the given key) and return it, otherwise it will skip create a new record (with an new key) and return it. (CASE): If the given dictionary contains key fields, which are addressing an NOT exisiting entity then it will add it and return it again. Depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability) it will either use the given key oder create a assign a new key that will be present within the returned fields). For that reason it is IMPORTANT, that the call needs to evaluate the returned key!",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreAddOrUpdateEntityFieldsResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreAddOrUpdateEntityRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "entity": {
            "$ref": "#/components/schemas/StudyExecutionScope"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreAddOrUpdateEntityResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "$ref": "#/components/schemas/StudyExecutionScope"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreTryUpdateEntityFieldsRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "description": "NOTE: The target entity to be updated will be addressed by the key values used from this param! If the given dictionary does not contain the key fiels, an exception will be thrown!",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreTryUpdateEntityFieldsResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreTryUpdateEntityRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "entity": {
            "$ref": "#/components/schemas/StudyExecutionScope"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreTryUpdateEntityResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "$ref": "#/components/schemas/StudyExecutionScope"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreTryAddEntityRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "entity": {
            "$ref": "#/components/schemas/StudyExecutionScope"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreTryAddEntityResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "string",
            "format": "uuid"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreMassupdateByKeysRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToUpdate": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreMassupdateByKeysResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreMassupdateRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "description": "A set of fields and value, that should be update. It MUST NOT contain fields which are part of the Key, otherwise an exception will be thrown!",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreMassupdateResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreMassupdateBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "description": "A search expression to adress that entities, which sould be updated.",
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "description": "A set of fields and value, that should be update. It MUST NOT contain fields which are part of the Key, otherwise an exception will be thrown!",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreMassupdateBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreTryDeleteEntitiesRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToDelete": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreTryDeleteEntitiesResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreTryUpdateKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "currentKey": {
            "type": "string",
            "format": "uuid"
          },
          "newKey": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyExecutionScopeStoreTryUpdateKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "boolean"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreGetOriginIdentityRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreGetOriginIdentityResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "string",
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreGetCapabilitiesRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreGetCapabilitiesResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "$ref": "#/components/schemas/RepositoryCapabilities"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreGetEntityRefsRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreGetEntityRefsResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuidEntityRef"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreGetEntityRefsBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "nullable": true
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreGetEntityRefsBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuidEntityRef"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreGetEntityRefsByKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToLoad": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreGetEntityRefsByKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuidEntityRef"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreGetEntitiesRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScope": {
        "required": [
          "participantIdentifierSemantic",
          "researchStudyUid",
          "studyWorkflowName",
          "studyWorkflowVersion"
        ],
        "type": "object",
        "properties": {
          "researchStudyUid": {
            "type": "string",
            "description": "the official invariant name of the study as given by the sponsor",
            "format": "uuid"
          },
          "participantIdentifierSemantic": {
            "type": "string",
            "description": "for example \"Screening-Number\" or \"Randomization-Number\""
          },
          "studyWorkflowName": {
            "maxLength": 100,
            "type": "string",
            "description": "*this field has a max length of 100"
          },
          "studyWorkflowVersion": {
            "maxLength": 20,
            "type": "string",
            "description": "*this field has a max length of 20"
          }
        },
        "additionalProperties": false
      },
      "StudyScopeStoreGetEntitiesResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StudyScope"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreGetEntitiesBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "nullable": true
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreGetEntitiesBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StudyScope"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreGetEntitiesByKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToLoad": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreGetEntitiesByKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StudyScope"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreGetEntityFieldsRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          },
          "includedFieldNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be loaded",
            "nullable": true
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreGetEntityFieldsResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": { }
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreGetEntityFieldsBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "nullable": true
          },
          "includedFieldNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be loaded",
            "nullable": true
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreGetEntityFieldsBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": { }
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreGetEntityFieldsByKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToLoad": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "includedFieldNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreGetEntityFieldsByKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": { }
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreCountAllRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreCountAllResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "integer",
            "format": "int32"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreCountRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreCountResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "integer",
            "format": "int32"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreCountBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreCountBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "integer",
            "format": "int32"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreContainsKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "key": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreContainsKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "boolean"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreAddOrUpdateEntityFieldsRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "description": "NOTE: The target entity to be updated will be addressed by the key values used from this param, so if the given dictionary contains key fields which are addressing an exisiting record, then it will be updated. (CASE): If the given dictionary contains NO key fields, then the result is depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability): If external keys are required, this method will skip crating a record and return null, otherwise it will create a new record (with an new key) and return it. (CASE): If the given dictionary contains key fields, which are addressing an NOT exisiting entity then the result is again depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability): If external keys are required, this method will crate a record (using the given key) and return it, otherwise it will skip create a new record (with an new key) and return it. (CASE): If the given dictionary contains key fields, which are addressing an NOT exisiting entity then it will add it and return it again. Depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability) it will either use the given key oder create a assign a new key that will be present within the returned fields). For that reason it is IMPORTANT, that the call needs to evaluate the returned key!",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreAddOrUpdateEntityFieldsResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreAddOrUpdateEntityRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "entity": {
            "$ref": "#/components/schemas/StudyScope"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreAddOrUpdateEntityResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "$ref": "#/components/schemas/StudyScope"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreTryUpdateEntityFieldsRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "description": "NOTE: The target entity to be updated will be addressed by the key values used from this param! If the given dictionary does not contain the key fiels, an exception will be thrown!",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreTryUpdateEntityFieldsResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreTryUpdateEntityRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "entity": {
            "$ref": "#/components/schemas/StudyScope"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreTryUpdateEntityResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "$ref": "#/components/schemas/StudyScope"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreTryAddEntityRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "entity": {
            "$ref": "#/components/schemas/StudyScope"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreTryAddEntityResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "string",
            "format": "uuid"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreMassupdateByKeysRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToUpdate": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreMassupdateByKeysResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreMassupdateRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "description": "A set of fields and value, that should be update. It MUST NOT contain fields which are part of the Key, otherwise an exception will be thrown!",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreMassupdateResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreMassupdateBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "description": "A search expression to adress that entities, which sould be updated.",
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "description": "A set of fields and value, that should be update. It MUST NOT contain fields which are part of the Key, otherwise an exception will be thrown!",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreMassupdateBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreTryDeleteEntitiesRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToDelete": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreTryDeleteEntitiesResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreTryUpdateKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "currentKey": {
            "type": "string",
            "format": "uuid"
          },
          "newKey": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "StudyScopeStoreTryUpdateKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "boolean"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreGetOriginIdentityRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreGetOriginIdentityResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "string",
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreGetCapabilitiesRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreGetCapabilitiesResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "$ref": "#/components/schemas/RepositoryCapabilities"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreGetEntityRefsRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreGetEntityRefsResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuidEntityRef"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreGetEntityRefsBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "nullable": true
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreGetEntityRefsBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuidEntityRef"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreGetEntityRefsByKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToLoad": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreGetEntityRefsByKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuidEntityRef"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreGetEntitiesRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddress": {
        "required": [
          "city",
          "country",
          "houseNumber",
          "internalRecordId",
          "postCode",
          "state",
          "street"
        ],
        "type": "object",
        "properties": {
          "internalRecordId": {
            "type": "string",
            "format": "uuid"
          },
          "street": {
            "type": "string"
          },
          "houseNumber": {
            "type": "string"
          },
          "postCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string",
            "description": "*this field is optional (use null as value)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubjectAddressStoreGetEntitiesResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubjectAddress"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreGetEntitiesBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "nullable": true
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreGetEntitiesBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubjectAddress"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreGetEntitiesByKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToLoad": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreGetEntitiesByKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubjectAddress"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreGetEntityFieldsRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          },
          "includedFieldNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be loaded",
            "nullable": true
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreGetEntityFieldsResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": { }
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreGetEntityFieldsBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "nullable": true
          },
          "includedFieldNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be loaded",
            "nullable": true
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreGetEntityFieldsBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": { }
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreGetEntityFieldsByKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToLoad": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "includedFieldNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreGetEntityFieldsByKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": { }
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreCountAllRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreCountAllResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "integer",
            "format": "int32"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreCountRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreCountResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "integer",
            "format": "int32"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreCountBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreCountBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "integer",
            "format": "int32"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreContainsKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "key": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreContainsKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "boolean"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreAddOrUpdateEntityFieldsRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "description": "NOTE: The target entity to be updated will be addressed by the key values used from this param, so if the given dictionary contains key fields which are addressing an exisiting record, then it will be updated. (CASE): If the given dictionary contains NO key fields, then the result is depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability): If external keys are required, this method will skip crating a record and return null, otherwise it will create a new record (with an new key) and return it. (CASE): If the given dictionary contains key fields, which are addressing an NOT exisiting entity then the result is again depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability): If external keys are required, this method will crate a record (using the given key) and return it, otherwise it will skip create a new record (with an new key) and return it. (CASE): If the given dictionary contains key fields, which are addressing an NOT exisiting entity then it will add it and return it again. Depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability) it will either use the given key oder create a assign a new key that will be present within the returned fields). For that reason it is IMPORTANT, that the call needs to evaluate the returned key!",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreAddOrUpdateEntityFieldsResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreAddOrUpdateEntityRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "entity": {
            "$ref": "#/components/schemas/SubjectAddress"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreAddOrUpdateEntityResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "$ref": "#/components/schemas/SubjectAddress"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreTryUpdateEntityFieldsRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "description": "NOTE: The target entity to be updated will be addressed by the key values used from this param! If the given dictionary does not contain the key fiels, an exception will be thrown!",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreTryUpdateEntityFieldsResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreTryUpdateEntityRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "entity": {
            "$ref": "#/components/schemas/SubjectAddress"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreTryUpdateEntityResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "$ref": "#/components/schemas/SubjectAddress"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreTryAddEntityRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "entity": {
            "$ref": "#/components/schemas/SubjectAddress"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreTryAddEntityResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "string",
            "format": "uuid"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreMassupdateByKeysRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToUpdate": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreMassupdateByKeysResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreMassupdateRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "description": "A set of fields and value, that should be update. It MUST NOT contain fields which are part of the Key, otherwise an exception will be thrown!",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreMassupdateResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreMassupdateBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "description": "A search expression to adress that entities, which sould be updated.",
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "description": "A set of fields and value, that should be update. It MUST NOT contain fields which are part of the Key, otherwise an exception will be thrown!",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreMassupdateBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreTryDeleteEntitiesRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToDelete": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreTryDeleteEntitiesResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreTryUpdateKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "currentKey": {
            "type": "string",
            "format": "uuid"
          },
          "newKey": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectAddressStoreTryUpdateKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "boolean"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreGetOriginIdentityRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreGetOriginIdentityResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "string",
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreGetCapabilitiesRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreGetCapabilitiesResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "$ref": "#/components/schemas/RepositoryCapabilities"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreGetEntityRefsRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreGetEntityRefsResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuidEntityRef"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreGetEntityRefsBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "nullable": true
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreGetEntityRefsBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuidEntityRef"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreGetEntityRefsByKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToLoad": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreGetEntityRefsByKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuidEntityRef"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreGetEntitiesRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentity": {
        "required": [
          "recordId"
        ],
        "type": "object",
        "properties": {
          "recordId": {
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "description": "*this field is optional (use null as value)",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "*this field is optional (use null as value)",
            "nullable": true
          },
          "gender": {
            "type": "integer",
            "description": "0=Male / 1=Female / 2=Other *this field is optional",
            "format": "int32",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "description": "*this field is optional",
            "format": "date-time",
            "nullable": true
          },
          "dateOfDeath": {
            "type": "string",
            "description": "*this field is optional",
            "format": "date-time",
            "nullable": true
          },
          "fullNamePattern": {
            "type": "string",
            "description": "can be used to specify the full salutation including all academic grades by a string containing the placeholders: \"{G}\"=Gender {F}=\"FirstName\" {L}=\"LastName\". If not specified, a generic fallback can be used *this field is optional (use null as value)",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "*this field is optional (use null as value)",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "*this field is optional (use null as value)",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "*this field is optional (use null as value)",
            "nullable": true
          },
          "mobileNumber": {
            "type": "string",
            "description": "*this field is optional (use null as value)",
            "nullable": true
          },
          "residentAddressId": {
            "type": "string",
            "description": "*this field is optional",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubjectIdentityStoreGetEntitiesResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubjectIdentity"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreGetEntitiesBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "nullable": true
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreGetEntitiesBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubjectIdentity"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreGetEntitiesByKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToLoad": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreGetEntitiesByKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubjectIdentity"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreGetEntityFieldsRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          },
          "includedFieldNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be loaded",
            "nullable": true
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreGetEntityFieldsResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": { }
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreGetEntityFieldsBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "nullable": true
          },
          "includedFieldNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be loaded",
            "nullable": true
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreGetEntityFieldsBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": { }
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreGetEntityFieldsByKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToLoad": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "includedFieldNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreGetEntityFieldsByKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": { }
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreCountAllRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreCountAllResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "integer",
            "format": "int32"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreCountRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreCountResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "integer",
            "format": "int32"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreCountBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreCountBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "integer",
            "format": "int32"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreContainsKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "key": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreContainsKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "boolean"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreAddOrUpdateEntityFieldsRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "description": "NOTE: The target entity to be updated will be addressed by the key values used from this param, so if the given dictionary contains key fields which are addressing an exisiting record, then it will be updated. (CASE): If the given dictionary contains NO key fields, then the result is depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability): If external keys are required, this method will skip crating a record and return null, otherwise it will create a new record (with an new key) and return it. (CASE): If the given dictionary contains key fields, which are addressing an NOT exisiting entity then the result is again depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability): If external keys are required, this method will crate a record (using the given key) and return it, otherwise it will skip create a new record (with an new key) and return it. (CASE): If the given dictionary contains key fields, which are addressing an NOT exisiting entity then it will add it and return it again. Depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability) it will either use the given key oder create a assign a new key that will be present within the returned fields). For that reason it is IMPORTANT, that the call needs to evaluate the returned key!",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreAddOrUpdateEntityFieldsResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreAddOrUpdateEntityRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "entity": {
            "$ref": "#/components/schemas/SubjectIdentity"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreAddOrUpdateEntityResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "$ref": "#/components/schemas/SubjectIdentity"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreTryUpdateEntityFieldsRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "description": "NOTE: The target entity to be updated will be addressed by the key values used from this param! If the given dictionary does not contain the key fiels, an exception will be thrown!",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreTryUpdateEntityFieldsResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreTryUpdateEntityRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "entity": {
            "$ref": "#/components/schemas/SubjectIdentity"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreTryUpdateEntityResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "$ref": "#/components/schemas/SubjectIdentity"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreTryAddEntityRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "entity": {
            "$ref": "#/components/schemas/SubjectIdentity"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreTryAddEntityResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "string",
            "format": "uuid"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreMassupdateByKeysRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToUpdate": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreMassupdateByKeysResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreMassupdateRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "description": "A set of fields and value, that should be update. It MUST NOT contain fields which are part of the Key, otherwise an exception will be thrown!",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreMassupdateResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreMassupdateBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "description": "A search expression to adress that entities, which sould be updated.",
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "description": "A set of fields and value, that should be update. It MUST NOT contain fields which are part of the Key, otherwise an exception will be thrown!",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreMassupdateBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreTryDeleteEntitiesRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToDelete": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreTryDeleteEntitiesResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreTryUpdateKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "currentKey": {
            "type": "string",
            "format": "uuid"
          },
          "newKey": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectIdentityStoreTryUpdateKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "boolean"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreGetOriginIdentityRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreGetOriginIdentityResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "string",
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreGetCapabilitiesRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreGetCapabilitiesResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "$ref": "#/components/schemas/RepositoryCapabilities"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreGetEntityRefsRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationIdentity": {
        "type": "object",
        "additionalProperties": false,
        "description": "Composite Key, which represents the primary identity of a SubjectParticipation"
      },
      "SubjectParticipationIdentityEntityRef": {
        "type": "object",
        "properties": {
          "key": {
            "$ref": "#/components/schemas/SubjectParticipationIdentity"
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubjectParticipationStoreGetEntityRefsResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubjectParticipationIdentityEntityRef"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreGetEntityRefsBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "nullable": true
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreGetEntityRefsBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubjectParticipationIdentityEntityRef"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreGetEntityRefsByKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToLoad": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubjectParticipationIdentity"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreGetEntityRefsByKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubjectParticipationIdentityEntityRef"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreGetEntitiesRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipation": {
        "required": [
          "createdForStudyExecutionIdentifier",
          "creationDateUtc",
          "participantIdentifier",
          "researchStudyUid"
        ],
        "type": "object",
        "properties": {
          "participantIdentifier": {
            "maxLength": 50,
            "type": "string",
            "description": "pseudonym of the patient which can be a randomization or screening number (the exact semantic is defined per study) *this field has a max length of 50"
          },
          "researchStudyUid": {
            "type": "string",
            "format": "uuid"
          },
          "creationDateUtc": {
            "type": "string",
            "format": "date-time"
          },
          "createdForStudyExecutionIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "subjectIdentityRecordId": {
            "type": "string",
            "description": "*this field is optional",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubjectParticipationStoreGetEntitiesResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubjectParticipation"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreGetEntitiesBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "nullable": true
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreGetEntitiesBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubjectParticipation"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreGetEntitiesByKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToLoad": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubjectParticipationIdentity"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreGetEntitiesByKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubjectParticipation"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreGetEntityFieldsRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          },
          "includedFieldNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be loaded",
            "nullable": true
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreGetEntityFieldsResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": { }
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreGetEntityFieldsBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "nullable": true
          },
          "includedFieldNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be loaded",
            "nullable": true
          },
          "sortedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of field names to be used for sorting the results (before 'limit' and 'skip' is processed). Use the character \"^\" as prefix for DESC sorting. Sample: ['^Age','Lastname']",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreGetEntityFieldsBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": { }
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreGetEntityFieldsByKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToLoad": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubjectParticipationIdentity"
            },
            "nullable": true
          },
          "includedFieldNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreGetEntityFieldsByKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": { }
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreCountAllRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreCountAllResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "integer",
            "format": "int32"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreCountRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreCountResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "integer",
            "format": "int32"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreCountBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreCountBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "integer",
            "format": "int32"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreContainsKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "key": {
            "$ref": "#/components/schemas/SubjectParticipationIdentity"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreContainsKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "boolean"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreAddOrUpdateEntityFieldsRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "description": "NOTE: The target entity to be updated will be addressed by the key values used from this param, so if the given dictionary contains key fields which are addressing an exisiting record, then it will be updated. (CASE): If the given dictionary contains NO key fields, then the result is depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability): If external keys are required, this method will skip crating a record and return null, otherwise it will create a new record (with an new key) and return it. (CASE): If the given dictionary contains key fields, which are addressing an NOT exisiting entity then the result is again depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability): If external keys are required, this method will crate a record (using the given key) and return it, otherwise it will skip create a new record (with an new key) and return it. (CASE): If the given dictionary contains key fields, which are addressing an NOT exisiting entity then it will add it and return it again. Depending on the concrete repository implementation (see the 'RequiresExternalKeys'-Capability) it will either use the given key oder create a assign a new key that will be present within the returned fields). For that reason it is IMPORTANT, that the call needs to evaluate the returned key!",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreAddOrUpdateEntityFieldsResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreAddOrUpdateEntityRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "entity": {
            "$ref": "#/components/schemas/SubjectParticipation"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreAddOrUpdateEntityResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "$ref": "#/components/schemas/SubjectParticipation"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreTryUpdateEntityFieldsRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "description": "NOTE: The target entity to be updated will be addressed by the key values used from this param! If the given dictionary does not contain the key fiels, an exception will be thrown!",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreTryUpdateEntityFieldsResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreTryUpdateEntityRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "entity": {
            "$ref": "#/components/schemas/SubjectParticipation"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreTryUpdateEntityResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "$ref": "#/components/schemas/SubjectParticipation"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreTryAddEntityRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "entity": {
            "$ref": "#/components/schemas/SubjectParticipation"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreTryAddEntityResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "$ref": "#/components/schemas/SubjectParticipationIdentity"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreMassupdateByKeysRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToUpdate": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubjectParticipationIdentity"
            },
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreMassupdateByKeysResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubjectParticipationIdentity"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreMassupdateRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionTree"
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "description": "A set of fields and value, that should be update. It MUST NOT contain fields which are part of the Key, otherwise an exception will be thrown!",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreMassupdateResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubjectParticipationIdentity"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreMassupdateBySearchExpressionRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "searchExpression": {
            "type": "string",
            "description": "A search expression to adress that entities, which sould be updated.",
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "description": "A set of fields and value, that should be update. It MUST NOT contain fields which are part of the Key, otherwise an exception will be thrown!",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreMassupdateBySearchExpressionResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubjectParticipationIdentity"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreTryDeleteEntitiesRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "keysToDelete": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubjectParticipationIdentity"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreTryDeleteEntitiesResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubjectParticipationIdentity"
            },
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreTryUpdateKeyRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "currentKey": {
            "$ref": "#/components/schemas/SubjectParticipationIdentity"
          },
          "newKey": {
            "$ref": "#/components/schemas/SubjectParticipationIdentity"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "SubjectParticipationStoreTryUpdateKeyResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "boolean"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "UnblindingClearanceAwaiterServiceGrantClearanceForUnblindingRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "unblindingToken": {
            "type": "string",
            "nullable": true
          },
          "pseudonymsToUnblind": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "grantedUnitl": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "UnblindingClearanceAwaiterServiceGrantClearanceForUnblindingResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "UnblindingClearanceGrantingServiceHasClearanceForUnblindingRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "unblindingToken": {
            "type": "string",
            "nullable": true
          },
          "pseudonymsToUnblind": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "accessRelatedDetails": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "an optional container that can contain for example the ipadress or JWT token of the accessor or some MFA related information",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "UnblindingClearanceGrantingServiceHasClearanceForUnblindingResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "integer",
            "format": "int32"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "UnblindingServiceRequestUnblindingTokenRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "pseudonymsToUnblind": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "pseudonymKind": {
            "type": "string",
            "nullable": true
          },
          "requestReason": {
            "type": "string",
            "nullable": true
          },
          "requestBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "UnblindingServiceRequestUnblindingTokenResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "unblindingToken": {
            "type": "string",
            "nullable": true
          },
          "return": {
            "type": "integer",
            "format": "int32"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "IdentityDetails": {
        "required": [
          "birthDate",
          "familyName",
          "givenName"
        ],
        "type": "object",
        "properties": {
          "givenName": {
            "type": "string",
            "description": "the firstname a person (named as in the HL7 standard)"
          },
          "familyName": {
            "type": "string",
            "description": "the lastname a person (named as in the HL7 standard)"
          },
          "birthDate": {
            "type": "string",
            "description": "date in format 'yyyy-MM-dd' (must NOT be a partial date for this usecase!)"
          },
          "extendedFields": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "additional values for each 'extendedField' that is mandatory within (and specific to) the current IMS-System.\r\nTo retrieve the declarations for such fields call 'GetExtendedFieldDescriptors'",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UnblindingServiceTryUnblindRequest": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "unblindingToken": {
            "type": "string",
            "nullable": true
          },
          "pseudonymsToUnblind": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "pseudonymKind": {
            "type": "string",
            "nullable": true
          },
          "unblindedIdentities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityDetails"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      },
      "UnblindingServiceTryUnblindResponse": {
        "type": "object",
        "properties": {
          "_": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Used to flow additional ambient data (see UJMW standard)",
            "nullable": true
          },
          "return": {
            "type": "integer",
            "format": "int32"
          },
          "fault": {
            "type": "string",
            "description": "Optional field, which can be used to transport an error-message.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Unified Json Message Wrapper"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}